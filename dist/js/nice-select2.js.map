{"version":3,"file":"js/nice-select2.js","mappings":";;;;;;;;AAAA;;;;;;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACnRsU;AAChR;;AAEtD;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,+DAAW;AAC9B,wBAAwB,oEAAgB;AACxC,sBAAsB,iEAAa;AACnC,eAAe,2DAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gEAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,4DAAQ;AACd,wBAAwB,oEAAgB;AACxC;AACA;AACA,6BAA6B,oEAAgB;AAC7C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,4BAA4B,oEAAgB;AAC5C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM,EAAE,4DAAQ;AAChB;AACA;AACA;AACA,0BAA0B,oEAAgB;AAC1C;AACA;AACA;AACA;AACA,iBAAiB,oEAAgB;AACjC,mBAAmB,iEAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,uDAAG;AAC1B,uBAAuB,uDAAG;;AAE1B;AACA;AACA;AACA;AACA;AACA,mBAAmB,yDAAK;;AAExB;AACA;AACA;AACA;AACA,4BAA4B,gEAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,mGAAmG,gEAAY,qEAAqE,gEAAY,oEAAoE,2DAAO;AAC3Q;AACA;AACA,aAAa,gEAAY,8CAA8C,iFAA6B;AACpG;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,4BAA4B,0DAAU;AACtC;AACA;AACA,QAAQ,EAAE,4DAAQ;AAClB,4EAA4E,0DAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qEAAiB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2DAAO;AAChD;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAY;AACtC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM,gEAAY;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE,4DAAQ;AAClB,mBAAmB,2DAAO;AAC1B,8BAA8B,2DAAO;AACrC;AACA,sGAAsG,wEAAoB,sBAAsB,yEAAqB;AACrK;AACA,mCAAmC,6EAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qEAAiB;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0DAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ,EAAE,4DAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uDAAG;AAClB,eAAe,uDAAG;AAClB,eAAe,uDAAG;AAClB,eAAe,uDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,4BAA4B,oEAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE,4DAAQ;AAClB;AACA;AACA,uBAAuB,oEAAgB;AACvC,4BAA4B,oEAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,+DAAW;AACzB;AACA;AACA,0BAA0B,2DAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAO;AACpC,2BAA2B,uDAAG;AAC9B,0BAA0B,uDAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,eAAe,2DAAO;AACtB,oBAAoB,gEAAY;AAChC,qBAAqB,+DAAW;AAChC;AACA;AACA,mBAAmB,4DAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,EAAE,4DAAQ;AAClB;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAW,CAAC,2DAAO;AAC3C,uBAAuB,mEAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yDAAK;AAC9B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ,EAAE,4DAAQ;AAClB;AACA;AACA;AACA;AACA,wBAAwB,+DAAW;AACnC,uBAAuB,mEAAe;AACtC;AACA;AACA,wBAAwB,4DAAQ;AAChC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2DAAO;AAC7D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,wBAAwB;AACxB;AACA,QAAQ,EAAE,4DAAQ;AAClB;AACA,mBAAmB,2DAAO;AAC1B,wBAAwB,gEAAY;AACpC,sBAAsB,+DAAW;AACjC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uDAAG;AACnD,QAAQ;AACR;AACA,iDAAiD,uDAAG;AACpD;AACA;AACA,qBAAqB,uDAAG;AACxB,qBAAqB,uDAAG;AACxB,qBAAqB,uDAAG;AACxB,qBAAqB,uDAAG;AACxB;AACA,iFAAiF,uDAAG;AACpF,UAAU;AACV,mFAAmF,uDAAG;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsH;;;;;;;;;;;;;;;;;;;ACr+B3B;AACmC;AACpD;AACqN;AACjO;;AAE9D;AACA,cAAc,wEAAgB;AAC9B;AACA;AACA;AACA;AACA,oBAAoB,qEAAa;AACjC;AACA;AACA,yBAAyB,yDAAK,2BAA2B,yDAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,iEAAS;AACnB;;AAEA;AACA;AACA,OAAO,qEAAa;AACpB,WAAW,gEAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,eAAe,yDAAK;AACpB,eAAe,yDAAK;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,gEAAY;AAC3C;AACA,cAAc,iEAAS;AACvB,OAAO,gEAAQ;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,iEAAS;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gEAAY;AAC1B;AACA;AACA,UAAU,iEAAS;AACnB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,2HAA2H,gEAAY;AACvI;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAS;AACzB,sCAAsC,iEAAS,iBAAiB,iEAAS;AACzE;AACA;AACA;AACA;AACA,kBAAkB,wEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAS;AAC/B;AACA;AACA,SAAS,oEAAgB;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kCAAkC,qEAAa;AAC/C,0BAA0B,0EAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gEAAY;AAC1B,kBAAkB,gEAAY;AAC9B;AACA,QAAQ,mEAAW,6BAA6B,yEAAiB;AACjE,eAAe,qEAAa;AAC5B;AACA,QAAQ,qEAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,0EAAkB,kBAAkB,qEAAa;AAChF;;AAEA;AACA;AACA;AACA,eAAe,0EAAkB;AACjC,iBAAiB,qEAAa;AAC9B;AACA,gBAAgB,uDAAG;AACnB,iBAAiB,uDAAG;AACpB;AACA;AACA,MAAM,wEAAgB;AACtB,SAAS,uDAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,iEAAS;AACvB,eAAe,0EAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gEAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qEAAa,gCAAgC,gEAAY;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,2BAA2B,0EAAkB;AAC7C,IAAI,SAAS,iEAAS;AACtB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oEAAgB;AACzB;AACA;AACA,qBAAqB,qEAAa;AAClC,kCAAkC,iEAAS,gBAAgB,6EAAqB;AAChF;AACA;AACA,SAAS,wEAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAoB,uBAAuB,iEAAS,QAAQ,mEAAW;AACtF;AACA,yBAAyB,wEAAgB;AACzC,qCAAqC,qEAAa;;AAElD;AACA,SAAS,iEAAS,kBAAkB,6EAAqB;AACzD,0BAA0B,wEAAgB;AAC1C,oCAAoC,yEAAiB;AACrD;AACA;AACA;AACA,kTAAkT,yEAAiB;AACnU;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,kBAAkB,qEAAa;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAG;AACrB,oBAAoB,uDAAG;AACvB,qBAAqB,uDAAG;AACxB,mBAAmB,uDAAG;AACtB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,qEAAa;AAC/C,0BAA0B,0EAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAY;AAC9B;AACA,QAAQ,mEAAW,6BAA6B,yEAAiB;AACjE,eAAe,qEAAa;AAC5B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,qEAAa,aAAa,wEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,iEAAS;AAC1B,OAAO,qEAAa;AACpB;AACA;AACA;AACA,yBAAyB,sEAAc,kBAAkB,wEAAgB;AACzE;AACA;AACA,uBAAuB,mEAAW,6BAA6B,mEAAW,6BAA6B,wEAAgB,yCAAyC,yEAAiB;AACjL;AACA;AACA,yBAAyB,0EAAkB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,wEAAgB;AACzB;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,0EAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAK;AAC1B,uBAAuB,yDAAK;AAC5B,wBAAwB,yDAAK;AAC7B,sBAAsB,yDAAK;AAC3B;AACA;AACA;AACA,iBAAiB,uDAAG,IAAI,uDAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,0EAA0E,4EAAoB,wBAAwB,4EAAoB;AAC1I;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAiB;AAC1B;AACA;AACA,GAAG;AACH;;AAEiD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvlBjyW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HzW;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmT;;;;;;;;;;;;;;;AC5HnT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,gCAAgC;;AAEvC;;AAEA;;AAEA,mDAAmD,EAAE;;AAErD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,QAAQ;;AAEf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD,EAAE;;AAE1D;;AAEA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,EAAE;AACtB,eAAe,EAAE,KAAK,EAAE;AACxB,eAAe,EAAE,OAAO,EAAE;AAC1B,eAAe,EAAE,QAAQ,EAAE;AAC3B,eAAe,EAAE,MAAM,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD,iBAAiB,KAAK,GAAG,KAAK,QAAQ,cAAc,GAAG,EAAE,GAAG;;AAEpH,OAAO,UAAU;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA,aAAa,EAAE;;AAEf,aAAa,EAAE;;AAEf;;AAEA,aAAa,EAAE;;AAEf;;AAEA,aAAa,EAAE;;AAEf,aAAa,EAAE;;AAEf;;AAEA;;AAEA;;AAEA;;AAEA,aAAa,EAAE;;AAEf;;AAEA;;AAEA;;AAEA,aAAa,EAAE;;AAEf;;AAEA,aAAa,EAAE;;AAEf;;AAEA,aAAa,EAAE;;AAEf,aAAa,EAAE;;AAEf,aAAa,EAAE;;AAEf,aAAa,EAAE;;AAEf,aAAa,EAAE;;AAEf;;AAEA;;AAEA;;AAEA;;AAEA,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,EAAE;;AAEhB,cAAc,GAAG;;AAEjB,cAAc,EAAE;;AAEhB,cAAc,GAAG;;AAEjB,cAAc,GAAG;;AAEjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,yCAAyC,EAAE,0BAA0B,EAAE,gBAAgB,EAAE,4BAA4B,EAAE,gBAAgB,EAAE,sBAAsB;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA,OAAO,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA,yBAAyB,EAAE,GAAG,EAAE,GAAG,GAAG;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,MAAM;AACvB,iBAAiB,YAAY;AAC7B,iBAAiB,YAAY;AAC7B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC,2BAA2B,UAAU;AACrC;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA,mCAAmC,eAAe,KAAK,EAAE,KAAK,EAAE,aAAa;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB,iBAAiB,MAAM;AACvB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;AAClB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,sCAAsC;AAC/C,SAAS,YAAY;AACrB,SAAS,sCAAsC;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,IAAI;AACJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA,SAAS,aAAa;AACtB,SAAS,8CAA8C;AACvD;AACA,mBAAmB;AACnB,SAAS,aAAa;AACtB,SAAS,8CAA8C;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,6CAA6C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,OAAO;AAChB;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAAS;;AAEhB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS,sDAAsD;AAC/D,SAAS,wBAAwB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,cAAc;AAC3B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,SAAS,0BAA0B;AACnC,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,QAAQ;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW;AACX;AACA,UAAU;AACV;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,0CAA0C;AACnD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAmF;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA,SAAS,8BAA8B;AACvC;AACA,SAAS,MAAM;AACf,qCAAqC,EAAE,gBAAgB,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;;AAEA,eAAe,EAAE;;AAEjB,eAAe,EAAE;;AAEjB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS,+CAA+C;AACxD,SAAS,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAK;AACZ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6BAA6B;AAC9C;AACA,uCAAuC,EAAE;AACzC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;;AAEA,OAAO,WAAW;;AAElB;AACA,SAAS,qBAAqB;AAC9B,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,yCAAyC;AAClD,SAAS,aAAa;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;;AAED;AACA,SAAS,MAAM;AACf,SAAS,qBAAqB;AAC9B,qBAAqB,mBAAmB;AACxC,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,WAAW,oCAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA,OAAO,sCAAsC;;AAE7C;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,MAAM;AACf;AACA;AACA,SAAS,OAAO;AAChB;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,oBAAoB;;AAE9D;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA,SAAS,YAAY;AACrB,SAAS,eAAe;AACxB,SAAS,SAAS;AAClB,SAAS,qDAAqD;AAC9D,SAAS,eAAe,SAAS;AACjC,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA,qCAAqC,6DAA6D;AAClG,QAAQ;AACR,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA,sDAAsD,qBAAqB;AAC3E,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,oDAAoD,cAAc,QAAQ,aAAa;AACvF,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B,GAAG,EAAE,GAAG,EAAE,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B,SAAS,mCAAmC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,MAAM;AACjB;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe,iDAAiD;AAChE,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,eAAe,8CAA8C;AAC7D,eAAe,cAAc;AAC7B;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA,WAAW;AACX;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAwD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ;AACR,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,8EAA8E;AACvF,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAE8G;AAC9G;;;;;;;SCp/FA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA;UACA;UACA,iCAAiC,WAAW;UAC5C;UACA;;;;;UCPA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;;;;;;;;;;;;;;;;;;;;ACAmC;AACgD;AACnF;AACsD;AACtD;AAC8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,gBAAgB;AACpF;AACA;AACA,4BAA4B,kBAAkB,cAAc,yBAAyB;AACrF,qBAAqB,+CAA+C;AACpE;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D,gCAAgC,oEAAiB;AACjD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,eAAe;AAC7D,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iEAAe;AACjB;AACA;AACA,IAAI,wDAAM;AACV,IAAI,sDAAI,GAAG,mDAAmD;AAC9D,oCAAoC,sDAAI;AACxC,aAAa,iBAAiB;AAC9B;AACA,qBAAqB,+BAA+B;AACpD,OAAO;AACP,MAAM;AACN;AACA,KAAK;AACL,8BAA8B,sDAAI;AAClC,aAAa,OAAO;AACpB;AACA,iBAAiB,sBAAsB;AACvC,OAAO;AACP,MAAM;AACN;AACA,KAAK;AACL;AACA,GAAG,UAAU,iBAAiB;AAC9B;AACA,YAAY,EAAE;AACd,aAAa,EAAE;AACfkBAAkB,4DAAU;AAC5B;AACA;AACA;AACA,GAAG,uDAAc;AACjB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,uDAAc;AACjB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,uDAAc;AACjB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA","sources":["webpack://nice-select2/./src/scss/nice-select2.scss","webpack://nice-select2/./node_modules/scroll-into-view/scrollIntoView.js","webpack://nice-select2/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://nice-select2/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://nice-select2/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://nice-select2/./node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","webpack://nice-select2/./node_modules/overlayscrollbars/overlayscrollbars.mjs","webpack://nice-select2/webpack/bootstrap","webpack://nice-select2/webpack/runtime/compat get default export","webpack://nice-select2/webpack/runtime/define property getters","webpack://nice-select2/webpack/runtime/hasOwnProperty shorthand","webpack://nice-select2/./src/js/nice-select2.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","var COMPLETE = 'complete',\n    CANCELED = 'canceled';\n\nfunction raf(task){\n    if('requestAnimationFrame' in window){\n        return window.requestAnimationFrame(task);\n    }\n\n    setTimeout(task, 16);\n}\n\nfunction setElementScroll(element, x, y){\n    Math.max(0, x);\n    Math.max(0, y);\n\n    if(element.self === element){\n        element.scrollTo(x, y);\n    }else{\n        element.scrollLeft = x;\n        element.scrollTop = y;\n    }\n}\n\nfunction getTargetScrollLocation(scrollSettings, parent){\n    var align = scrollSettings.align,\n        target = scrollSettings.target,\n        targetPosition = target.getBoundingClientRect(),\n        parentPosition,\n        x,\n        y,\n        differenceX,\n        differenceY,\n        targetWidth,\n        targetHeight,\n        leftAlign = align && align.left != null ? align.left : 0.5,\n        topAlign = align && align.top != null ? align.top : 0.5,\n        leftOffset = align && align.leftOffset != null ? align.leftOffset : 0,\n        topOffset = align && align.topOffset != null ? align.topOffset : 0,\n        leftScalar = leftAlign,\n        topScalar = topAlign;\n\n    if(scrollSettings.isWindow(parent)){\n        targetWidth = Math.min(targetPosition.width, parent.innerWidth);\n        targetHeight = Math.min(targetPosition.height, parent.innerHeight);\n        x = targetPosition.left + parent.pageXOffset - parent.innerWidth * leftScalar + targetWidth * leftScalar;\n        y = targetPosition.top + parent.pageYOffset - parent.innerHeight * topScalar + targetHeight * topScalar;\n        x -= leftOffset;\n        y -= topOffset;\n        x = scrollSettings.align.lockX ? parent.pageXOffset : x;\n        y = scrollSettings.align.lockY ? parent.pageYOffset : y;\n        differenceX = x - parent.pageXOffset;\n        differenceY = y - parent.pageYOffset;\n    }else{\n        targetWidth = targetPosition.width;\n        targetHeight = targetPosition.height;\n        parentPosition = parent.getBoundingClientRect();\n        var offsetLeft = targetPosition.left - (parentPosition.left - parent.scrollLeft);\n        var offsetTop = targetPosition.top - (parentPosition.top - parent.scrollTop);\n        x = offsetLeft + (targetWidth * leftScalar) - parent.clientWidth * leftScalar;\n        y = offsetTop + (targetHeight * topScalar) - parent.clientHeight * topScalar;\n        x -= leftOffset;\n        y -= topOffset;\n        x = Math.max(Math.min(x, parent.scrollWidth - parent.clientWidth), 0);\n        y = Math.max(Math.min(y, parent.scrollHeight - parent.clientHeight), 0);\n        x = scrollSettings.align.lockX ? parent.scrollLeft : x;\n        y = scrollSettings.align.lockY ? parent.scrollTop : y;\n        differenceX = x - parent.scrollLeft;\n        differenceY = y - parent.scrollTop;\n    }\n\n    return {\n        x: x,\n        y: y,\n        differenceX: differenceX,\n        differenceY: differenceY\n    };\n}\n\nfunction animate(parent){\n    var scrollSettings = parent._scrollSettings;\n\n    if(!scrollSettings){\n        return;\n    }\n\n    var maxSynchronousAlignments = scrollSettings.maxSynchronousAlignments;\n\n    var location = getTargetScrollLocation(scrollSettings, parent),\n        time = Date.now() - scrollSettings.startTime,\n        timeValue = Math.min(1 / scrollSettings.time * time, 1);\n\n    if(scrollSettings.endIterations >= maxSynchronousAlignments){\n        setElementScroll(parent, location.x, location.y);\n        parent._scrollSettings = null;\n        return scrollSettings.end(COMPLETE);\n    }\n\n    var easeValue = 1 - scrollSettings.ease(timeValue);\n\n    setElementScroll(parent,\n        location.x - location.differenceX * easeValue,\n        location.y - location.differenceY * easeValue\n    );\n\n    if(time >= scrollSettings.time){\n        scrollSettings.endIterations++;\n        // Align ancestor synchronously\n        scrollSettings.scrollAncestor && animate(scrollSettings.scrollAncestor);\n        animate(parent);\n        return;\n    }\n\n    raf(animate.bind(null, parent));\n}\n\nfunction defaultIsWindow(target){\n    return target.self === target\n}\n\nfunction transitionScrollTo(target, parent, settings, scrollAncestor, callback){\n    var idle = !parent._scrollSettings,\n        lastSettings = parent._scrollSettings,\n        now = Date.now(),\n        cancelHandler,\n        passiveOptions = { passive: true };\n\n    if(lastSettings){\n        lastSettings.end(CANCELED);\n    }\n\n    function end(endType){\n        parent._scrollSettings = null;\n\n        if(parent.parentElement && parent.parentElement._scrollSettings){\n            parent.parentElement._scrollSettings.end(endType);\n        }\n\n        if(settings.debug){\n            console.log('Scrolling ended with type', endType, 'for', parent)\n        }\n\n        callback(endType);\n        if(cancelHandler){\n            parent.removeEventListener('touchstart', cancelHandler, passiveOptions);\n            parent.removeEventListener('wheel', cancelHandler, passiveOptions);\n        }\n    }\n\n    var maxSynchronousAlignments = settings.maxSynchronousAlignments;\n\n    if(maxSynchronousAlignments == null){\n        maxSynchronousAlignments = 3;\n    }\n\n    parent._scrollSettings = {\n        startTime: now,\n        endIterations: 0,\n        target: target,\n        time: settings.time,\n        ease: settings.ease,\n        align: settings.align,\n        isWindow: settings.isWindow || defaultIsWindow,\n        maxSynchronousAlignments: maxSynchronousAlignments,\n        end: end,\n        scrollAncestor\n    };\n\n    if(!('cancellable' in settings) || settings.cancellable){\n        cancelHandler = end.bind(null, CANCELED);\n        parent.addEventListener('touchstart', cancelHandler, passiveOptions);\n        parent.addEventListener('wheel', cancelHandler, passiveOptions);\n    }\n\n    if(idle){\n        animate(parent);\n    }\n\n    return cancelHandler\n}\n\nfunction defaultIsScrollable(element){\n    return (\n        'pageXOffset' in element ||\n        (\n            element.scrollHeight !== element.clientHeight ||\n            element.scrollWidth !== element.clientWidth\n        ) &&\n        getComputedStyle(element).overflow !== 'hidden'\n    );\n}\n\nfunction defaultValidTarget(){\n    return true;\n}\n\nfunction findParentElement(el){\n    if (el.assignedSlot) {\n        return findParentElement(el.assignedSlot);\n    }\n\n    if (el.parentElement) {\n        if(el.parentElement.tagName.toLowerCase() === 'body'){\n            return el.parentElement.ownerDocument.defaultView || el.parentElement.ownerDocument.ownerWindow;\n        }\n        return el.parentElement;\n    }\n\n    if (el.getRootNode){\n        var parent = el.getRootNode()\n        if(parent.nodeType === 11) {\n            return parent.host;\n        }\n    }\n}\n\nmodule.exports = function(target, settings, callback){\n    if(!target){\n        return;\n    }\n\n    if(typeof settings === 'function'){\n        callback = settings;\n        settings = null;\n    }\n\n    if(!settings){\n        settings = {};\n    }\n\n    settings.time = isNaN(settings.time) ? 1000 : settings.time;\n    settings.ease = settings.ease || function(v){return 1 - Math.pow(1 - v, v / 2);};\n    settings.align = settings.align || {};\n\n    var parent = findParentElement(target),\n        parents = 1;\n\n    function done(endType){\n        parents--;\n        if(!parents){\n            callback && callback(endType);\n        }\n    }\n\n    var validTarget = settings.validTarget || defaultValidTarget;\n    var isScrollable = settings.isScrollable;\n\n    if(settings.debug){\n        console.log('About to scroll to', target)\n\n        if(!parent){\n            console.error('Target did not have a parent, is it mounted in the DOM?')\n        }\n    }\n\n    var scrollingElements = [];\n\n    while(parent){\n        if(settings.debug){\n            console.log('Scrolling parent node', parent)\n        }\n\n        if(validTarget(parent, parents) && (isScrollable ? isScrollable(parent, defaultIsScrollable) : defaultIsScrollable(parent))){\n            parents++;\n            scrollingElements.push(parent);\n        }\n\n        parent = findParentElement(parent);\n\n        if(!parent){\n            done(COMPLETE)\n            break;\n        }\n    }\n\n    return scrollingElements.reduce((cancel, parent, index) => transitionScrollTo(target, parent, settings, scrollingElements[index + 1], done), null);\n};\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","/*!\n * OverlayScrollbars\n * Version: 2.3.0\n *\n * Copyright (c) Rene Haas | KingSora.\n * https://github.com/KingSora\n *\n * Released under the MIT license.\n */\n\nfunction each(t, n) {\n  if (isArrayLike(t)) {\n    for (let o = 0; o < t.length; o++) {\n      if (false === n(t[o], o, t)) {\n        break;\n      }\n    }\n  } else if (t) {\n    each(Object.keys(t), (o => n(t[o], o, t)));\n  }\n  return t;\n}\n\nfunction style(t, n) {\n  const o = isString(n);\n  const s = isArray(n) || o;\n  if (s) {\n    let s = o ? \"\" : {};\n    if (t) {\n      const e = window.getComputedStyle(t, null);\n      s = o ? getCSSVal(t, e, n) : n.reduce(((n, o) => {\n        n[o] = getCSSVal(t, e, o);\n        return n;\n      }), s);\n    }\n    return s;\n  }\n  t && each(keys(n), (o => setCSSVal(t, o, n[o])));\n}\n\nconst createCache = (t, n) => {\n  const {o: o, u: s, _: e} = t;\n  let c = o;\n  let r;\n  const cacheUpdateContextual = (t, n) => {\n    const o = c;\n    const l = t;\n    const i = n || (s ? !s(o, l) : o !== l);\n    if (i || e) {\n      c = l;\n      r = o;\n    }\n    return [ c, i, r ];\n  };\n  const cacheUpdateIsolated = t => cacheUpdateContextual(n(c, r), t);\n  const getCurrentCache = t => [ c, !!t, r ];\n  return [ n ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache ];\n};\n\nconst isClient = () => \"undefined\" !== typeof window;\n\nconst t = isClient() && Node.ELEMENT_NODE;\n\nconst {toString: n, hasOwnProperty: o} = Object.prototype;\n\nconst isUndefined = t => void 0 === t;\n\nconst isNull = t => null === t;\n\nconst type = t => isUndefined(t) || isNull(t) ? `${t}` : n.call(t).replace(/^\\[object (.+)\\]$/, \"$1\").toLowerCase();\n\nconst isNumber = t => \"number\" === typeof t;\n\nconst isString = t => \"string\" === typeof t;\n\nconst isBoolean = t => \"boolean\" === typeof t;\n\nconst isFunction = t => \"function\" === typeof t;\n\nconst isArray = t => Array.isArray(t);\n\nconst isObject = t => \"object\" === typeof t && !isArray(t) && !isNull(t);\n\nconst isArrayLike = t => {\n  const n = !!t && t.length;\n  const o = isNumber(n) && n > -1 && n % 1 == 0;\n  return isArray(t) || !isFunction(t) && o ? n > 0 && isObject(t) ? n - 1 in t : true : false;\n};\n\nconst isPlainObject = t => {\n  if (!t || !isObject(t) || \"object\" !== type(t)) {\n    return false;\n  }\n  let n;\n  const s = \"constructor\";\n  const e = t[s];\n  const c = e && e.prototype;\n  const r = o.call(t, s);\n  const l = c && o.call(c, \"isPrototypeOf\");\n  if (e && !r && !l) {\n    return false;\n  }\n  for (n in t) {}\n  return isUndefined(n) || o.call(t, n);\n};\n\nconst isHTMLElement = n => {\n  const o = HTMLElement;\n  return n ? o ? n instanceof o : n.nodeType === t : false;\n};\n\nconst isElement = n => {\n  const o = Element;\n  return n ? o ? n instanceof o : n.nodeType === t : false;\n};\n\nconst indexOf = (t, n, o) => t.indexOf(n, o);\n\nconst push = (t, n, o) => {\n  !o && !isString(n) && isArrayLike(n) ? Array.prototype.push.apply(t, n) : t.push(n);\n  return t;\n};\n\nconst from = t => {\n  const n = Array.from;\n  const o = [];\n  if (n && t) {\n    return n(t);\n  }\n  if (t instanceof Set) {\n    t.forEach((t => {\n      push(o, t);\n    }));\n  } else {\n    each(t, (t => {\n      push(o, t);\n    }));\n  }\n  return o;\n};\n\nconst isEmptyArray = t => !!t && 0 === t.length;\n\nconst runEachAndClear = (t, n, o) => {\n  const runFn = t => t && t.apply(void 0, n || []);\n  each(t, runFn);\n  !o && (t.length = 0);\n};\n\nconst hasOwnProperty = (t, n) => Object.prototype.hasOwnProperty.call(t, n);\n\nconst keys = t => t ? Object.keys(t) : [];\n\nconst assignDeep = (t, n, o, s, e, c, r) => {\n  const l = [ n, o, s, e, c, r ];\n  if ((\"object\" !== typeof t || isNull(t)) && !isFunction(t)) {\n    t = {};\n  }\n  each(l, (n => {\n    each(keys(n), (o => {\n      const s = n[o];\n      if (t === s) {\n        return true;\n      }\n      const e = isArray(s);\n      if (s && (isPlainObject(s) || e)) {\n        const n = t[o];\n        let c = n;\n        if (e && !isArray(n)) {\n          c = [];\n        } else if (!e && !isPlainObject(n)) {\n          c = {};\n        }\n        t[o] = assignDeep(c, s);\n      } else {\n        t[o] = s;\n      }\n    }));\n  }));\n  return t;\n};\n\nconst isEmptyObject = t => {\n  for (const n in t) {\n    return false;\n  }\n  return true;\n};\n\nconst getSetProp = (t, n, o, s) => {\n  if (isUndefined(s)) {\n    return o ? o[t] : n;\n  }\n  o && (isString(s) || isNumber(s)) && (o[t] = s);\n};\n\nconst attr = (t, n, o) => {\n  if (isUndefined(o)) {\n    return t ? t.getAttribute(n) : null;\n  }\n  t && t.setAttribute(n, o);\n};\n\nconst removeAttr = (t, n) => {\n  t && t.removeAttribute(n);\n};\n\nconst attrClass = (t, n, o, s) => {\n  if (o) {\n    const e = attr(t, n) || \"\";\n    const c = new Set(e.split(\" \"));\n    c[s ? \"add\" : \"delete\"](o);\n    const r = from(c).join(\" \").trim();\n    attr(t, n, r);\n  }\n};\n\nconst hasAttrClass = (t, n, o) => {\n  const s = attr(t, n) || \"\";\n  const e = new Set(s.split(\" \"));\n  return e.has(o);\n};\n\nconst scrollLeft = (t, n) => getSetProp(\"scrollLeft\", 0, t, n);\n\nconst scrollTop = (t, n) => getSetProp(\"scrollTop\", 0, t, n);\n\nconst s = isClient() && Element.prototype;\n\nconst find = (t, n) => {\n  const o = [];\n  const s = n ? isElement(n) ? n : null : document;\n  return s ? push(o, s.querySelectorAll(t)) : o;\n};\n\nconst findFirst = (t, n) => {\n  const o = n ? isElement(n) ? n : null : document;\n  return o ? o.querySelector(t) : null;\n};\n\nconst is = (t, n) => {\n  if (isElement(t)) {\n    const o = s.matches || s.msMatchesSelector;\n    return o.call(t, n);\n  }\n  return false;\n};\n\nconst contents = t => t ? from(t.childNodes) : [];\n\nconst parent = t => t ? t.parentElement : null;\n\nconst closest = (t, n) => {\n  if (isElement(t)) {\n    const o = s.closest;\n    if (o) {\n      return o.call(t, n);\n    }\n    do {\n      if (is(t, n)) {\n        return t;\n      }\n      t = parent(t);\n    } while (t);\n  }\n  return null;\n};\n\nconst liesBetween = (t, n, o) => {\n  const s = t && closest(t, n);\n  const e = t && findFirst(o, s);\n  const c = closest(e, n) === s;\n  return s && e ? s === t || e === t || c && closest(closest(t, o), n) !== s : false;\n};\n\nconst before = (t, n, o) => {\n  if (o && t) {\n    let s = n;\n    let e;\n    if (isArrayLike(o)) {\n      e = document.createDocumentFragment();\n      each(o, (t => {\n        if (t === s) {\n          s = t.previousSibling;\n        }\n        e.appendChild(t);\n      }));\n    } else {\n      e = o;\n    }\n    if (n) {\n      if (!s) {\n        s = t.firstChild;\n      } else if (s !== n) {\n        s = s.nextSibling;\n      }\n    }\n    t.insertBefore(e, s || null);\n  }\n};\n\nconst appendChildren = (t, n) => {\n  before(t, null, n);\n};\n\nconst insertBefore = (t, n) => {\n  before(parent(t), t, n);\n};\n\nconst insertAfter = (t, n) => {\n  before(parent(t), t && t.nextSibling, n);\n};\n\nconst removeElements = t => {\n  if (isArrayLike(t)) {\n    each(from(t), (t => removeElements(t)));\n  } else if (t) {\n    const n = parent(t);\n    if (n) {\n      n.removeChild(t);\n    }\n  }\n};\n\nconst createDiv = t => {\n  const n = document.createElement(\"div\");\n  if (t) {\n    attr(n, \"class\", t);\n  }\n  return n;\n};\n\nconst createDOM = t => {\n  const n = createDiv();\n  n.innerHTML = t.trim();\n  return each(contents(n), (t => removeElements(t)));\n};\n\nconst firstLetterToUpper = t => t.charAt(0).toUpperCase() + t.slice(1);\n\nconst getDummyStyle = () => createDiv().style;\n\nconst e = [ \"-webkit-\", \"-moz-\", \"-o-\", \"-ms-\" ];\n\nconst c = [ \"WebKit\", \"Moz\", \"O\", \"MS\", \"webkit\", \"moz\", \"o\", \"ms\" ];\n\nconst r = {};\n\nconst l = {};\n\nconst cssProperty = t => {\n  let n = l[t];\n  if (hasOwnProperty(l, t)) {\n    return n;\n  }\n  const o = firstLetterToUpper(t);\n  const s = getDummyStyle();\n  each(e, (e => {\n    const c = e.replace(/-/g, \"\");\n    const r = [ t, e + t, c + o, firstLetterToUpper(c) + o ];\n    return !(n = r.find((t => void 0 !== s[t])));\n  }));\n  return l[t] = n || \"\";\n};\n\nconst jsAPI = t => {\n  if (isClient()) {\n    let n = r[t] || window[t];\n    if (hasOwnProperty(r, t)) {\n      return n;\n    }\n    each(c, (o => {\n      n = n || window[o + firstLetterToUpper(t)];\n      return !n;\n    }));\n    r[t] = n;\n    return n;\n  }\n};\n\nconst i = jsAPI(\"MutationObserver\");\n\nconst a = jsAPI(\"IntersectionObserver\");\n\nconst u = jsAPI(\"ResizeObserver\");\n\nconst f = jsAPI(\"cancelAnimationFrame\");\n\nconst d = jsAPI(\"requestAnimationFrame\");\n\nconst _ = jsAPI(\"ScrollTimeline\");\n\nconst h = isClient() && window.setTimeout;\n\nconst g = isClient() && window.clearTimeout;\n\nconst v = /[^\\x20\\t\\r\\n\\f]+/g;\n\nconst classListAction = (t, n, o) => {\n  const s = t && t.classList;\n  let e;\n  let c = 0;\n  let r = false;\n  if (s && n && isString(n)) {\n    const t = n.match(v) || [];\n    r = t.length > 0;\n    while (e = t[c++]) {\n      r = !!o(s, e) && r;\n    }\n  }\n  return r;\n};\n\nconst removeClass = (t, n) => {\n  classListAction(t, n, ((t, n) => t.remove(n)));\n};\n\nconst addClass = (t, n) => {\n  classListAction(t, n, ((t, n) => t.add(n)));\n  return removeClass.bind(0, t, n);\n};\n\nconst {max: p} = Math;\n\nconst animationCurrentTime = () => performance.now();\n\nconst animateNumber = (t, n, o, s, e) => {\n  let c = 0;\n  const r = animationCurrentTime();\n  const l = p(0, o);\n  const frame = o => {\n    const i = animationCurrentTime();\n    const a = i - r;\n    const u = a >= l;\n    const f = o ? 1 : 1 - (p(0, r + l - i) / l || 0);\n    const _ = (n - t) * (isFunction(e) ? e(f, f * l, 0, 1, l) : f) + t;\n    const h = u || 1 === f;\n    s && s(_, f, h);\n    c = h ? 0 : d((() => frame()));\n  };\n  frame();\n  return t => {\n    f(c);\n    t && frame(t);\n  };\n};\n\nconst equal = (t, n, o, s) => {\n  if (t && n) {\n    let e = true;\n    each(o, (o => {\n      const c = s ? s(t[o]) : t[o];\n      const r = s ? s(n[o]) : n[o];\n      if (c !== r) {\n        e = false;\n      }\n    }));\n    return e;\n  }\n  return false;\n};\n\nconst equalWH = (t, n) => equal(t, n, [ \"w\", \"h\" ]);\n\nconst equalXY = (t, n) => equal(t, n, [ \"x\", \"y\" ]);\n\nconst equalTRBL = (t, n) => equal(t, n, [ \"t\", \"r\", \"b\", \"l\" ]);\n\nconst equalBCRWH = (t, n, o) => equal(t, n, [ \"width\", \"height\" ], o && (t => Math.round(t)));\n\nconst noop = () => {};\n\nconst selfClearTimeout = t => {\n  let n;\n  const o = t ? h : d;\n  const s = t ? g : f;\n  return [ e => {\n    s(n);\n    n = o(e, isFunction(t) ? t() : t);\n  }, () => s(n) ];\n};\n\nconst debounce = (t, n) => {\n  let o;\n  let s;\n  let e;\n  let c = noop;\n  const {g: r, v: l, p: i} = n || {};\n  const a = function invokeFunctionToDebounce(n) {\n    c();\n    g(o);\n    o = s = void 0;\n    c = noop;\n    t.apply(this, n);\n  };\n  const mergeParms = t => i && s ? i(s, t) : t;\n  const flush = () => {\n    if (c !== noop) {\n      a(mergeParms(e) || e);\n    }\n  };\n  const u = function debouncedFn() {\n    const t = from(arguments);\n    const n = isFunction(r) ? r() : r;\n    const i = isNumber(n) && n >= 0;\n    if (i) {\n      const r = isFunction(l) ? l() : l;\n      const i = isNumber(r) && r >= 0;\n      const u = n > 0 ? h : d;\n      const _ = n > 0 ? g : f;\n      const v = mergeParms(t);\n      const p = v || t;\n      const w = a.bind(0, p);\n      c();\n      const b = u(w, n);\n      c = () => _(b);\n      if (i && !o) {\n        o = h(flush, r);\n      }\n      s = e = p;\n    } else {\n      a(t);\n    }\n  };\n  u.m = flush;\n  return u;\n};\n\nconst w = {\n  opacity: 1,\n  zIndex: 1\n};\n\nconst parseToZeroOrNumber = (t, n) => {\n  const o = t || \"\";\n  const s = n ? parseFloat(o) : parseInt(o, 10);\n  return s === s ? s : 0;\n};\n\nconst adaptCSSVal = (t, n) => !w[t] && isNumber(n) ? `${n}px` : n;\n\nconst getCSSVal = (t, n, o) => String((null != n ? n[o] || n.getPropertyValue(o) : t.style[o]) || \"\");\n\nconst setCSSVal = (t, n, o) => {\n  try {\n    const {style: s} = t;\n    if (!isUndefined(s[n])) {\n      s[n] = adaptCSSVal(n, o);\n    } else {\n      s.setProperty(n, o);\n    }\n  } catch (s) {}\n};\n\nconst directionIsRTL = t => \"rtl\" === style(t, \"direction\");\n\nconst topRightBottomLeft = (t, n, o) => {\n  const s = n ? `${n}-` : \"\";\n  const e = o ? `-${o}` : \"\";\n  const c = `${s}top${e}`;\n  const r = `${s}right${e}`;\n  const l = `${s}bottom${e}`;\n  const i = `${s}left${e}`;\n  const a = style(t, [ c, r, l, i ]);\n  return {\n    t: parseToZeroOrNumber(a[c], true),\n    r: parseToZeroOrNumber(a[r], true),\n    b: parseToZeroOrNumber(a[l], true),\n    l: parseToZeroOrNumber(a[i], true)\n  };\n};\n\nconst getTrasformTranslateValue = (t, n) => `translate${isArray(t) ? `(${t[0]},${t[1]})` : `${n ? \"X\" : \"Y\"}(${t})`}`;\n\nconst {round: b} = Math;\n\nconst m = {\n  w: 0,\n  h: 0\n};\n\nconst windowSize = () => ({\n  w: window.innerWidth,\n  h: window.innerHeight\n});\n\nconst offsetSize = t => t ? {\n  w: t.offsetWidth,\n  h: t.offsetHeight\n} : m;\n\nconst clientSize = t => t ? {\n  w: t.clientWidth,\n  h: t.clientHeight\n} : m;\n\nconst scrollSize = t => t ? {\n  w: t.scrollWidth,\n  h: t.scrollHeight\n} : m;\n\nconst fractionalSize = t => {\n  const n = parseFloat(style(t, \"height\")) || 0;\n  const o = parseFloat(style(t, \"width\")) || 0;\n  return {\n    w: o - b(o),\n    h: n - b(n)\n  };\n};\n\nconst getBoundingClientRect = t => t.getBoundingClientRect();\n\nconst domRectHasDimensions = t => !!(t && (t.height || t.width));\n\nlet y;\n\nconst supportPassiveEvents = () => {\n  if (isUndefined(y)) {\n    y = false;\n    try {\n      window.addEventListener(\"test\", null, Object.defineProperty({}, \"passive\", {\n        get() {\n          y = true;\n        }\n      }));\n    } catch (t) {}\n  }\n  return y;\n};\n\nconst splitEventNames = t => t.split(\" \");\n\nconst off = (t, n, o, s) => {\n  each(splitEventNames(n), (n => {\n    t.removeEventListener(n, o, s);\n  }));\n};\n\nconst on = (t, n, o, s) => {\n  var e;\n  const c = supportPassiveEvents();\n  const r = null != (e = c && s && s.S) ? e : c;\n  const l = s && s.$ || false;\n  const i = s && s.C || false;\n  const a = [];\n  const u = c ? {\n    passive: r,\n    capture: l\n  } : l;\n  each(splitEventNames(n), (n => {\n    const s = i ? e => {\n      t.removeEventListener(n, s, l);\n      o && o(e);\n    } : o;\n    push(a, off.bind(null, t, n, s, l));\n    t.addEventListener(n, s, u);\n  }));\n  return runEachAndClear.bind(0, a);\n};\n\nconst stopPropagation = t => t.stopPropagation();\n\nconst preventDefault = t => t.preventDefault();\n\nconst S = {\n  x: 0,\n  y: 0\n};\n\nconst absoluteCoordinates = t => {\n  const n = t ? getBoundingClientRect(t) : 0;\n  return n ? {\n    x: n.left + window.pageYOffset,\n    y: n.top + window.pageXOffset\n  } : S;\n};\n\nconst manageListener = (t, n) => {\n  each(isArray(n) ? n : [ n ], t);\n};\n\nconst createEventListenerHub = t => {\n  const n = new Map;\n  const removeEvent = (t, o) => {\n    if (t) {\n      const s = n.get(t);\n      manageListener((t => {\n        if (s) {\n          s[t ? \"delete\" : \"clear\"](t);\n        }\n      }), o);\n    } else {\n      n.forEach((t => {\n        t.clear();\n      }));\n      n.clear();\n    }\n  };\n  const addEvent = (t, o) => {\n    if (isString(t)) {\n      const s = n.get(t) || new Set;\n      n.set(t, s);\n      manageListener((t => {\n        isFunction(t) && s.add(t);\n      }), o);\n      return removeEvent.bind(0, t, o);\n    }\n    if (isBoolean(o) && o) {\n      removeEvent();\n    }\n    const s = keys(t);\n    const e = [];\n    each(s, (n => {\n      const o = t[n];\n      o && push(e, addEvent(n, o));\n    }));\n    return runEachAndClear.bind(0, e);\n  };\n  const triggerEvent = (t, o) => {\n    const s = n.get(t);\n    each(from(s), (t => {\n      if (o && !isEmptyArray(o)) {\n        t.apply(0, o);\n      } else {\n        t();\n      }\n    }));\n  };\n  addEvent(t || {});\n  return [ addEvent, removeEvent, triggerEvent ];\n};\n\nconst opsStringify = t => JSON.stringify(t, ((t, n) => {\n  if (isFunction(n)) {\n    throw new Error;\n  }\n  return n;\n}));\n\nconst $ = {\n  paddingAbsolute: false,\n  showNativeOverlaidScrollbars: false,\n  update: {\n    elementEvents: [ [ \"img\", \"load\" ] ],\n    debounce: [ 0, 33 ],\n    attributes: null,\n    ignoreMutation: null\n  },\n  overflow: {\n    x: \"scroll\",\n    y: \"scroll\"\n  },\n  scrollbars: {\n    theme: \"os-theme-dark\",\n    visibility: \"auto\",\n    autoHide: \"never\",\n    autoHideDelay: 1300,\n    autoHideSuspend: false,\n    dragScroll: true,\n    clickScroll: false,\n    pointers: [ \"mouse\", \"touch\", \"pen\" ]\n  }\n};\n\nconst getOptionsDiff = (t, n) => {\n  const o = {};\n  const s = keys(n).concat(keys(t));\n  each(s, (s => {\n    const e = t[s];\n    const c = n[s];\n    if (isObject(e) && isObject(c)) {\n      assignDeep(o[s] = {}, getOptionsDiff(e, c));\n      if (isEmptyObject(o[s])) {\n        delete o[s];\n      }\n    } else if (hasOwnProperty(n, s) && c !== e) {\n      let t = true;\n      if (isArray(e) || isArray(c)) {\n        try {\n          if (opsStringify(e) === opsStringify(c)) {\n            t = false;\n          }\n        } catch (r) {}\n      }\n      if (t) {\n        o[s] = c;\n      }\n    }\n  }));\n  return o;\n};\n\nconst x = `data-overlayscrollbars`;\n\nconst C = \"os-environment\";\n\nconst O = `${C}-flexbox-glue`;\n\nconst T = `${O}-max`;\n\nconst z = `os-scrollbar-hidden`;\n\nconst E = `${x}-initialize`;\n\nconst A = x;\n\nconst I = `${A}-overflow-x`;\n\nconst H = `${A}-overflow-y`;\n\nconst L = \"overflowVisible\";\n\nconst P = \"scrollbarHidden\";\n\nconst M = \"scrollbarPressed\";\n\nconst D = \"updating\";\n\nconst R = `${x}-viewport`;\n\nconst k = \"arrange\";\n\nconst B = \"scrollbarHidden\";\n\nconst V = L;\n\nconst Y = `${x}-padding`;\n\nconst j = V;\n\nconst N = `${x}-content`;\n\nconst q = \"os-size-observer\";\n\nconst F = `${q}-appear`;\n\nconst G = `${q}-listener`;\n\nconst X = `${G}-scroll`;\n\nconst U = `${G}-item`;\n\nconst W = `${U}-final`;\n\nconst Z = \"os-trinsic-observer\";\n\nconst J = \"os-no-css-vars\";\n\nconst K = \"os-theme-none\";\n\nconst Q = \"os-scrollbar\";\n\nconst tt = `${Q}-rtl`;\n\nconst nt = `${Q}-horizontal`;\n\nconst ot = `${Q}-vertical`;\n\nconst st = `${Q}-track`;\n\nconst et = `${Q}-handle`;\n\nconst ct = `${Q}-visible`;\n\nconst rt = `${Q}-cornerless`;\n\nconst lt = `${Q}-transitionless`;\n\nconst it = `${Q}-interaction`;\n\nconst at = `${Q}-unusable`;\n\nconst ut = `${Q}-auto-hide`;\n\nconst ft = `${ut}-hidden`;\n\nconst dt = `${Q}-wheel`;\n\nconst _t = `${st}-interactive`;\n\nconst ht = `${et}-interactive`;\n\nconst gt = {};\n\nconst getPlugins = () => gt;\n\nconst addPlugin = t => {\n  const n = [];\n  each(isArray(t) ? t : [ t ], (t => {\n    const o = keys(t);\n    each(o, (o => {\n      push(n, gt[o] = t[o]);\n    }));\n  }));\n  return n;\n};\n\nconst vt = {\n  boolean: \"__TPL_boolean_TYPE__\",\n  number: \"__TPL_number_TYPE__\",\n  string: \"__TPL_string_TYPE__\",\n  array: \"__TPL_array_TYPE__\",\n  object: \"__TPL_object_TYPE__\",\n  function: \"__TPL_function_TYPE__\",\n  null: \"__TPL_null_TYPE__\"\n};\n\nconst pt = vt.number;\n\nconst wt = vt.boolean;\n\nconst bt = [ vt.array, vt.null ];\n\nconst mt = \"hidden scroll visible visible-hidden\";\n\nconst yt = \"visible hidden auto\";\n\nconst St = \"never scroll leavemove\";\n\n({\n  paddingAbsolute: wt,\n  showNativeOverlaidScrollbars: wt,\n  update: {\n    elementEvents: bt,\n    attributes: bt,\n    debounce: [ vt.number, vt.array, vt.null ],\n    ignoreMutation: [ vt.function, vt.null ]\n  },\n  overflow: {\n    x: mt,\n    y: mt\n  },\n  scrollbars: {\n    theme: [ vt.string, vt.null ],\n    visibility: yt,\n    autoHide: St,\n    autoHideDelay: pt,\n    autoHideSuspend: wt,\n    dragScroll: wt,\n    clickScroll: wt,\n    pointers: [ vt.array, vt.null ]\n  }\n});\n\nconst $t = \"__osOptionsValidationPlugin\";\n\nconst xt = 3333333;\n\nconst Ct = \"scroll\";\n\nconst Ot = \"__osSizeObserverPlugin\";\n\nconst Tt = /* @__PURE__ */ (() => ({\n  [Ot]: {\n    O: (t, n, o) => {\n      const s = createDOM(`<div class=\"${U}\" dir=\"ltr\"><div class=\"${U}\"><div class=\"${W}\"></div></div><div class=\"${U}\"><div class=\"${W}\" style=\"width: 200%; height: 200%\"></div></div></div>`);\n      appendChildren(t, s);\n      addClass(t, X);\n      const e = s[0];\n      const c = e.lastChild;\n      const r = e.firstChild;\n      const l = null == r ? void 0 : r.firstChild;\n      let i = offsetSize(e);\n      let a = i;\n      let u = false;\n      let _;\n      const reset = () => {\n        scrollLeft(r, xt);\n        scrollTop(r, xt);\n        scrollLeft(c, xt);\n        scrollTop(c, xt);\n      };\n      const onResized = t => {\n        _ = 0;\n        if (u) {\n          i = a;\n          n(true === t);\n        }\n      };\n      const onScroll = t => {\n        a = offsetSize(e);\n        u = !t || !equalWH(a, i);\n        if (t) {\n          stopPropagation(t);\n          if (u && !_) {\n            f(_);\n            _ = d(onResized);\n          }\n        } else {\n          onResized(false === t);\n        }\n        reset();\n      };\n      const h = push([], [ on(r, Ct, onScroll), on(c, Ct, onScroll) ]);\n      style(l, {\n        width: xt,\n        height: xt\n      });\n      d(reset);\n      return [ o ? onScroll.bind(0, false) : reset, h ];\n    }\n  }\n}))();\n\nlet zt = 0;\n\nconst {round: Et, abs: At} = Math;\n\nconst getWindowDPR = () => {\n  const t = window.screen.deviceXDPI || 0;\n  const n = window.screen.logicalXDPI || 1;\n  return window.devicePixelRatio || t / n;\n};\n\nconst diffBiggerThanOne = (t, n) => {\n  const o = At(t);\n  const s = At(n);\n  return !(o === s || o + 1 === s || o - 1 === s);\n};\n\nconst It = \"__osScrollbarsHidingPlugin\";\n\nconst Ht = /* @__PURE__ */ (() => ({\n  [It]: {\n    T: t => {\n      const {A: n, I: o, H: s} = t;\n      const e = !s && !n && (o.x || o.y);\n      const c = e ? document.createElement(\"style\") : false;\n      if (c) {\n        attr(c, \"id\", `${R}-${k}-${zt}`);\n        zt++;\n      }\n      return c;\n    },\n    L: (t, n, o, s, e, c, r) => {\n      const arrangeViewport = (n, c, r, l) => {\n        if (t) {\n          const {P: t} = e();\n          const {M: i, D: a} = n;\n          const {x: u, y: f} = a;\n          const {x: d, y: _} = i;\n          const h = l ? \"paddingRight\" : \"paddingLeft\";\n          const g = t[h];\n          const v = t.paddingTop;\n          const p = c.w + r.w;\n          const w = c.h + r.h;\n          const b = {\n            w: _ && f ? `${_ + p - g}px` : \"\",\n            h: d && u ? `${d + w - v}px` : \"\"\n          };\n          if (s) {\n            const {sheet: t} = s;\n            if (t) {\n              const {cssRules: n} = t;\n              if (n) {\n                if (!n.length) {\n                  t.insertRule(`#${attr(s, \"id\")} + [${R}~='${k}']::before {}`, 0);\n                }\n                const o = n[0].style;\n                o.width = b.w;\n                o.height = b.h;\n              }\n            }\n          } else {\n            style(o, {\n              \"--os-vaw\": b.w,\n              \"--os-vah\": b.h\n            });\n          }\n        }\n        return t;\n      };\n      const undoViewportArrange = (s, l, i) => {\n        if (t) {\n          const a = i || c(s);\n          const {P: u} = e();\n          const {D: f} = a;\n          const {x: d, y: _} = f;\n          const h = {};\n          const assignProps = t => each(t.split(\" \"), (t => {\n            h[t] = u[t];\n          }));\n          if (d) {\n            assignProps(\"marginBottom paddingTop paddingBottom\");\n          }\n          if (_) {\n            assignProps(\"marginLeft marginRight paddingLeft paddingRight\");\n          }\n          const g = style(o, keys(h));\n          attrClass(o, R, k);\n          if (!n) {\n            h.height = \"\";\n          }\n          style(o, h);\n          return [ () => {\n            r(a, l, t, g);\n            style(o, g);\n            attrClass(o, R, k, true);\n          }, a ];\n        }\n        return [ noop ];\n      };\n      return [ arrangeViewport, undoViewportArrange ];\n    },\n    R: () => {\n      let t = {\n        w: 0,\n        h: 0\n      };\n      let n = 0;\n      return (o, s, e) => {\n        const c = windowSize();\n        const r = {\n          w: c.w - t.w,\n          h: c.h - t.h\n        };\n        if (0 === r.w && 0 === r.h) {\n          return;\n        }\n        const l = {\n          w: At(r.w),\n          h: At(r.h)\n        };\n        const i = {\n          w: At(Et(c.w / (t.w / 100))),\n          h: At(Et(c.h / (t.h / 100)))\n        };\n        const a = getWindowDPR();\n        const u = l.w > 2 && l.h > 2;\n        const f = !diffBiggerThanOne(i.w, i.h);\n        const d = a !== n && a > 0;\n        const _ = u && f && d;\n        if (_) {\n          const [t, n] = s();\n          assignDeep(o.k, t);\n          if (n) {\n            e();\n          }\n        }\n        t = c;\n        n = a;\n      };\n    }\n  }\n}))();\n\nconst Lt = \"__osClickScrollPlugin\";\n\nconst Pt = /* @__PURE__ */ (() => ({\n  [Lt]: {\n    O: (t, n, o, s, e) => {\n      let c = 0;\n      let r = noop;\n      const animateClickScroll = l => {\n        r = animateNumber(l, l + s * Math.sign(o), 133, ((o, l, i) => {\n          t(o);\n          const a = n();\n          const u = a + s;\n          const f = e >= a && e <= u;\n          if (i && !f) {\n            if (c) {\n              animateClickScroll(o);\n            } else {\n              const t = setTimeout((() => {\n                animateClickScroll(o);\n              }), 222);\n              r = () => {\n                clearTimeout(t);\n              };\n            }\n            c++;\n          }\n        }));\n      };\n      animateClickScroll(0);\n      return () => r();\n    }\n  }\n}))();\n\nlet Mt;\n\nconst getNativeScrollbarSize = (t, n, o, s) => {\n  appendChildren(t, n);\n  const e = clientSize(n);\n  const c = offsetSize(n);\n  const r = fractionalSize(o);\n  s && removeElements(n);\n  return {\n    x: c.h - e.h + r.h,\n    y: c.w - e.w + r.w\n  };\n};\n\nconst getNativeScrollbarsHiding = t => {\n  let n = false;\n  const o = addClass(t, z);\n  try {\n    n = \"none\" === style(t, cssProperty(\"scrollbar-width\")) || \"none\" === window.getComputedStyle(t, \"::-webkit-scrollbar\").getPropertyValue(\"display\");\n  } catch (s) {}\n  o();\n  return n;\n};\n\nconst getRtlScrollBehavior = (t, n) => {\n  const o = \"hidden\";\n  style(t, {\n    overflowX: o,\n    overflowY: o,\n    direction: \"rtl\"\n  });\n  scrollLeft(t, 0);\n  const s = absoluteCoordinates(t);\n  const e = absoluteCoordinates(n);\n  scrollLeft(t, -999);\n  const c = absoluteCoordinates(n);\n  return {\n    i: s.x === e.x,\n    n: e.x !== c.x\n  };\n};\n\nconst getFlexboxGlue = (t, n) => {\n  const o = addClass(t, O);\n  const s = getBoundingClientRect(t);\n  const e = getBoundingClientRect(n);\n  const c = equalBCRWH(e, s, true);\n  const r = addClass(t, T);\n  const l = getBoundingClientRect(t);\n  const i = getBoundingClientRect(n);\n  const a = equalBCRWH(i, l, true);\n  o();\n  r();\n  return c && a;\n};\n\nconst createEnvironment = () => {\n  const {body: t} = document;\n  const n = createDOM(`<div class=\"${C}\"><div></div></div>`);\n  const o = n[0];\n  const s = o.firstChild;\n  const [e, , c] = createEventListenerHub();\n  const [r, l] = createCache({\n    o: getNativeScrollbarSize(t, o, s),\n    u: equalXY\n  }, getNativeScrollbarSize.bind(0, t, o, s, true));\n  const [i] = l();\n  const a = getNativeScrollbarsHiding(o);\n  const u = {\n    x: 0 === i.x,\n    y: 0 === i.y\n  };\n  const f = {\n    elements: {\n      host: null,\n      padding: !a,\n      viewport: t => a && t === t.ownerDocument.body && t,\n      content: false\n    },\n    scrollbars: {\n      slot: true\n    },\n    cancel: {\n      nativeScrollbarsOverlaid: false,\n      body: null\n    }\n  };\n  const d = assignDeep({}, $);\n  const h = assignDeep.bind(0, {}, d);\n  const g = assignDeep.bind(0, {}, f);\n  const v = {\n    k: i,\n    I: u,\n    A: a,\n    H: \"-1\" === style(o, \"zIndex\"),\n    B: !!_,\n    V: getRtlScrollBehavior(o, s),\n    Y: getFlexboxGlue(o, s),\n    j: e.bind(0, \"z\"),\n    N: e.bind(0, \"r\"),\n    q: g,\n    F: t => assignDeep(f, t) && g(),\n    G: h,\n    X: t => assignDeep(d, t) && h(),\n    U: assignDeep({}, f),\n    W: assignDeep({}, d)\n  };\n  const p = window.addEventListener;\n  const w = debounce((t => c(t ? \"z\" : \"r\")), {\n    g: 33,\n    v: 99\n  });\n  removeAttr(o, \"style\");\n  removeElements(o);\n  p(\"resize\", w.bind(0, false));\n  if (!a && (!u.x || !u.y)) {\n    let t;\n    p(\"resize\", (() => {\n      const n = getPlugins()[It];\n      t = t || n && n.R();\n      t && t(v, r, w.bind(0, true));\n    }));\n  }\n  return v;\n};\n\nconst getEnvironment = () => {\n  if (!Mt) {\n    Mt = createEnvironment();\n  }\n  return Mt;\n};\n\nconst resolveInitialization = (t, n) => isFunction(n) ? n.apply(0, t) : n;\n\nconst staticInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return c || n.apply(0, t);\n};\n\nconst dynamicInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return !!c && (isHTMLElement(c) ? c : n.apply(0, t));\n};\n\nconst cancelInitialization = (t, n, o) => {\n  const {nativeScrollbarsOverlaid: s, body: e} = o || {};\n  const {I: c, A: r} = getEnvironment();\n  const {nativeScrollbarsOverlaid: l, body: i} = n;\n  const a = null != s ? s : l;\n  const u = isUndefined(e) ? i : e;\n  const f = (c.x || c.y) && a;\n  const d = t && (isNull(u) ? !r : u);\n  return !!f || !!d;\n};\n\nconst Dt = new WeakMap;\n\nconst addInstance = (t, n) => {\n  Dt.set(t, n);\n};\n\nconst removeInstance = t => {\n  Dt.delete(t);\n};\n\nconst getInstance = t => Dt.get(t);\n\nconst getPropByPath = (t, n) => t ? n.split(\".\").reduce(((t, n) => t && hasOwnProperty(t, n) ? t[n] : void 0), t) : void 0;\n\nconst createOptionCheck = (t, n, o) => s => [ getPropByPath(t, s), o || void 0 !== getPropByPath(n, s) ];\n\nconst createState = t => {\n  let n = t;\n  return [ () => n, t => {\n    n = assignDeep({}, n, t);\n  } ];\n};\n\nconst Rt = \"tabindex\";\n\nconst kt = createDiv.bind(0, \"\");\n\nconst unwrap = t => {\n  appendChildren(parent(t), contents(t));\n  removeElements(t);\n};\n\nconst createStructureSetupElements = t => {\n  const n = getEnvironment();\n  const {q: o, A: s} = n;\n  const e = getPlugins()[It];\n  const c = e && e.T;\n  const {elements: r} = o();\n  const {host: l, padding: i, viewport: a, content: u} = r;\n  const f = isHTMLElement(t);\n  const d = f ? {} : t;\n  const {elements: _} = d;\n  const {host: h, padding: g, viewport: v, content: p} = _ || {};\n  const w = f ? t : d.target;\n  const b = is(w, \"textarea\");\n  const m = w.ownerDocument;\n  const y = m.documentElement;\n  const S = w === m.body;\n  const $ = m.defaultView;\n  const x = staticInitializationElement.bind(0, [ w ]);\n  const C = dynamicInitializationElement.bind(0, [ w ]);\n  const O = resolveInitialization.bind(0, [ w ]);\n  const T = x.bind(0, kt, a);\n  const L = C.bind(0, kt, u);\n  const P = T(v);\n  const M = P === w;\n  const D = M && S;\n  const k = !M && L(p);\n  const V = !M && isHTMLElement(P) && P === k;\n  const j = V && !!O(u);\n  const q = j ? T() : P;\n  const F = j ? k : L();\n  const G = V ? q : P;\n  const X = D ? y : G;\n  const U = b ? x(kt, l, h) : w;\n  const W = D ? X : U;\n  const Z = V ? F : k;\n  const J = m.activeElement;\n  const K = !M && $.top === $ && J === w;\n  const Q = {\n    Z: w,\n    J: W,\n    K: X,\n    tt: !M && C(kt, i, g),\n    nt: Z,\n    ot: !M && !s && c && c(n),\n    st: D ? y : X,\n    et: D ? m : X,\n    ct: $,\n    rt: m,\n    lt: b,\n    it: S,\n    ut: f,\n    ft: M,\n    dt: V,\n    _t: (t, n) => hasAttrClass(X, M ? A : R, M ? n : t),\n    ht: (t, n, o) => attrClass(X, M ? A : R, M ? n : t, o)\n  };\n  const tt = keys(Q).reduce(((t, n) => {\n    const o = Q[n];\n    return push(t, o && isHTMLElement(o) && !parent(o) ? o : false);\n  }), []);\n  const elementIsGenerated = t => t ? indexOf(tt, t) > -1 : null;\n  const {Z: nt, J: ot, tt: st, K: et, nt: ct, ot: rt} = Q;\n  const lt = [ () => {\n    removeAttr(ot, A);\n    removeAttr(ot, E);\n    removeAttr(nt, E);\n    if (S) {\n      removeAttr(y, A);\n      removeAttr(y, E);\n    }\n  } ];\n  const it = b && elementIsGenerated(ot);\n  let at = b ? nt : contents([ ct, et, st, ot, nt ].find((t => false === elementIsGenerated(t))));\n  const ut = D ? nt : ct || et;\n  const appendElements = () => {\n    attr(ot, A, M ? \"viewport\" : \"host\");\n    attr(st, Y, \"\");\n    attr(ct, N, \"\");\n    if (!M) {\n      attr(et, R, \"\");\n    }\n    const t = S && !M ? addClass(parent(w), z) : noop;\n    if (it) {\n      insertAfter(nt, ot);\n      push(lt, (() => {\n        insertAfter(ot, nt);\n        removeElements(ot);\n      }));\n    }\n    appendChildren(ut, at);\n    appendChildren(ot, st);\n    appendChildren(st || ot, !M && et);\n    appendChildren(et, ct);\n    push(lt, (() => {\n      t();\n      removeAttr(st, Y);\n      removeAttr(ct, N);\n      removeAttr(et, I);\n      removeAttr(et, H);\n      removeAttr(et, R);\n      if (elementIsGenerated(ct)) {\n        unwrap(ct);\n      }\n      if (elementIsGenerated(et)) {\n        unwrap(et);\n      }\n      if (elementIsGenerated(st)) {\n        unwrap(st);\n      }\n    }));\n    if (s && !M) {\n      attrClass(et, R, B, true);\n      push(lt, removeAttr.bind(0, et, R));\n    }\n    if (rt) {\n      insertBefore(et, rt);\n      push(lt, removeElements.bind(0, rt));\n    }\n    if (K) {\n      const t = attr(et, Rt);\n      attr(et, Rt, \"-1\");\n      et.focus();\n      const revertViewportTabIndex = () => t ? attr(et, Rt, t) : removeAttr(et, Rt);\n      const n = on(m, \"pointerdown keydown\", (() => {\n        revertViewportTabIndex();\n        n();\n      }));\n      push(lt, [ revertViewportTabIndex, n ]);\n    } else if (J && J.focus) {\n      J.focus();\n    }\n    at = 0;\n  };\n  return [ Q, appendElements, runEachAndClear.bind(0, lt) ];\n};\n\nconst createTrinsicUpdateSegment = (t, n) => {\n  const {nt: o} = t;\n  const [s] = n;\n  return t => {\n    const {Y: n} = getEnvironment();\n    const {gt: e} = s();\n    const {vt: c} = t;\n    const r = (o || !n) && c;\n    if (r) {\n      style(o, {\n        height: e ? \"\" : \"100%\"\n      });\n    }\n    return {\n      wt: r,\n      bt: r\n    };\n  };\n};\n\nconst createPaddingUpdateSegment = (t, n) => {\n  const [o, s] = n;\n  const {J: e, tt: c, K: r, ft: l} = t;\n  const [i, a] = createCache({\n    u: equalTRBL,\n    o: topRightBottomLeft()\n  }, topRightBottomLeft.bind(0, e, \"padding\", \"\"));\n  return (t, n, e) => {\n    let [u, f] = a(e);\n    const {A: d, Y: _} = getEnvironment();\n    const {yt: h} = o();\n    const {wt: g, bt: v, St: p} = t;\n    const [w, b] = n(\"paddingAbsolute\");\n    const m = !_ && v;\n    if (g || f || m) {\n      [u, f] = i(e);\n    }\n    const y = !l && (b || p || f);\n    if (y) {\n      const t = !w || !c && !d;\n      const n = u.r + u.l;\n      const o = u.t + u.b;\n      const e = {\n        marginRight: t && !h ? -n : 0,\n        marginBottom: t ? -o : 0,\n        marginLeft: t && h ? -n : 0,\n        top: t ? -u.t : 0,\n        right: t ? h ? -u.r : \"auto\" : 0,\n        left: t ? h ? \"auto\" : -u.l : 0,\n        width: t ? `calc(100% + ${n}px)` : \"\"\n      };\n      const l = {\n        paddingTop: t ? u.t : 0,\n        paddingRight: t ? u.r : 0,\n        paddingBottom: t ? u.b : 0,\n        paddingLeft: t ? u.l : 0\n      };\n      style(c || r, e);\n      style(r, l);\n      s({\n        tt: u,\n        $t: !t,\n        P: c ? l : assignDeep({}, e, l)\n      });\n    }\n    return {\n      xt: y\n    };\n  };\n};\n\nconst {max: Bt} = Math;\n\nconst Vt = Bt.bind(0, 0);\n\nconst Yt = \"visible\";\n\nconst jt = \"hidden\";\n\nconst Nt = 42;\n\nconst qt = {\n  u: equalWH,\n  o: {\n    w: 0,\n    h: 0\n  }\n};\n\nconst Ft = {\n  u: equalXY,\n  o: {\n    x: jt,\n    y: jt\n  }\n};\n\nconst getOverflowAmount = (t, n) => {\n  const o = window.devicePixelRatio % 1 !== 0 ? 1 : 0;\n  const s = {\n    w: Vt(t.w - n.w),\n    h: Vt(t.h - n.h)\n  };\n  return {\n    w: s.w > o ? s.w : 0,\n    h: s.h > o ? s.h : 0\n  };\n};\n\nconst overflowIsVisible = t => 0 === t.indexOf(Yt);\n\nconst createOverflowUpdateSegment = (t, n) => {\n  const [o, s] = n;\n  const {J: e, tt: c, K: r, ot: l, ft: i, ht: a, it: u, ct: f} = t;\n  const {k: d, Y: _, A: h, I: g} = getEnvironment();\n  const v = getPlugins()[It];\n  const p = !i && !h && (g.x || g.y);\n  const w = u && i;\n  const [b, m] = createCache(qt, fractionalSize.bind(0, r));\n  const [y, S] = createCache(qt, scrollSize.bind(0, r));\n  const [$, x] = createCache(qt);\n  const [C, O] = createCache(qt);\n  const [T] = createCache(Ft);\n  const fixFlexboxGlue = (t, n) => {\n    style(r, {\n      height: \"\"\n    });\n    if (n) {\n      const {$t: n, tt: s} = o();\n      const {Ct: c, M: l} = t;\n      const i = fractionalSize(e);\n      const a = clientSize(e);\n      const u = \"content-box\" === style(r, \"boxSizing\");\n      const f = n || u ? s.b + s.t : 0;\n      const d = !(g.x && u);\n      style(r, {\n        height: a.h + i.h + (c.x && d ? l.x : 0) - f\n      });\n    }\n  };\n  const getViewportOverflowState = (t, n) => {\n    const o = !h && !t ? Nt : 0;\n    const getStatePerAxis = (t, s, e) => {\n      const c = style(r, t);\n      const l = n ? n[t] : c;\n      const i = \"scroll\" === l;\n      const a = s ? o : e;\n      const u = i && !h ? a : 0;\n      const f = s && !!o;\n      return [ c, i, u, f ];\n    };\n    const [s, e, c, l] = getStatePerAxis(\"overflowX\", g.x, d.x);\n    const [i, a, u, f] = getStatePerAxis(\"overflowY\", g.y, d.y);\n    return {\n      Ot: {\n        x: s,\n        y: i\n      },\n      Ct: {\n        x: e,\n        y: a\n      },\n      M: {\n        x: c,\n        y: u\n      },\n      D: {\n        x: l,\n        y: f\n      }\n    };\n  };\n  const setViewportOverflowState = (t, n, o, s) => {\n    const setAxisOverflowStyle = (t, n) => {\n      const o = overflowIsVisible(t);\n      const s = n && o && t.replace(`${Yt}-`, \"\") || \"\";\n      return [ n && !o ? t : \"\", overflowIsVisible(s) ? \"hidden\" : s ];\n    };\n    const [e, c] = setAxisOverflowStyle(o.x, n.x);\n    const [r, l] = setAxisOverflowStyle(o.y, n.y);\n    s.overflowX = c && r ? c : e;\n    s.overflowY = l && e ? l : r;\n    return getViewportOverflowState(t, s);\n  };\n  const hideNativeScrollbars = (t, n, s, e) => {\n    const {M: c, D: r} = t;\n    const {x: l, y: i} = r;\n    const {x: a, y: u} = c;\n    const {P: f} = o();\n    const d = n ? \"marginLeft\" : \"marginRight\";\n    const _ = n ? \"paddingLeft\" : \"paddingRight\";\n    const h = f[d];\n    const g = f.marginBottom;\n    const v = f[_];\n    const p = f.paddingBottom;\n    e.width = `calc(100% + ${u + -1 * h}px)`;\n    e[d] = -u + h;\n    e.marginBottom = -a + g;\n    if (s) {\n      e[_] = v + (i ? u : 0);\n      e.paddingBottom = p + (l ? a : 0);\n    }\n  };\n  const [z, E] = v ? v.L(p, _, r, l, o, getViewportOverflowState, hideNativeScrollbars) : [ () => p, () => [ noop ] ];\n  return (t, n, l) => {\n    const {wt: u, Tt: d, bt: v, xt: p, vt: M, St: D} = t;\n    const {gt: k, yt: N} = o();\n    const [q, F] = n(\"showNativeOverlaidScrollbars\");\n    const [G, X] = n(\"overflow\");\n    const U = q && g.x && g.y;\n    const W = !i && !_ && (u || v || d || F || M);\n    const Z = overflowIsVisible(G.x);\n    const J = overflowIsVisible(G.y);\n    const K = Z || J;\n    let Q = m(l);\n    let tt = S(l);\n    let nt = x(l);\n    let ot = O(l);\n    let st;\n    if (F && h) {\n      a(B, P, !U);\n    }\n    if (W) {\n      st = getViewportOverflowState(U);\n      fixFlexboxGlue(st, k);\n    }\n    if (u || p || v || D || F) {\n      if (K) {\n        a(V, L, false);\n      }\n      const [t, n] = E(U, N, st);\n      const [o, s] = Q = b(l);\n      const [e, c] = tt = y(l);\n      const i = clientSize(r);\n      let u = e;\n      let d = i;\n      t();\n      if ((c || s || F) && n && !U && z(n, e, o, N)) {\n        d = clientSize(r);\n        u = scrollSize(r);\n      }\n      const _ = {\n        w: Vt(Bt(e.w, u.w) + o.w),\n        h: Vt(Bt(e.h, u.h) + o.h)\n      };\n      const h = {\n        w: Vt((w ? f.innerWidth : d.w + Vt(i.w - e.w)) + o.w),\n        h: Vt((w ? f.innerHeight + o.h : d.h + Vt(i.h - e.h)) + o.h)\n      };\n      ot = C(h);\n      nt = $(getOverflowAmount(_, h), l);\n    }\n    const [et, ct] = ot;\n    const [rt, lt] = nt;\n    const [it, at] = tt;\n    const [ut, ft] = Q;\n    const dt = {\n      x: rt.w > 0,\n      y: rt.h > 0\n    };\n    const _t = Z && J && (dt.x || dt.y) || Z && dt.x && !dt.y || J && dt.y && !dt.x;\n    if (p || D || ft || at || ct || lt || X || F || W) {\n      const t = {\n        marginRight: 0,\n        marginBottom: 0,\n        marginLeft: 0,\n        width: \"\",\n        overflowY: \"\",\n        overflowX: \"\"\n      };\n      const n = setViewportOverflowState(U, dt, G, t);\n      const o = z(n, it, ut, N);\n      if (!i) {\n        hideNativeScrollbars(n, N, o, t);\n      }\n      if (W) {\n        fixFlexboxGlue(n, k);\n      }\n      if (i) {\n        attr(e, I, t.overflowX);\n        attr(e, H, t.overflowY);\n      } else {\n        style(r, t);\n      }\n    }\n    attrClass(e, A, L, _t);\n    attrClass(c, Y, j, _t);\n    if (!i) {\n      attrClass(r, R, V, K);\n    }\n    const [ht, gt] = T(getViewportOverflowState(U).Ot);\n    s({\n      Ot: ht,\n      zt: {\n        x: et.w,\n        y: et.h\n      },\n      Et: {\n        x: rt.w,\n        y: rt.h\n      },\n      At: dt\n    });\n    return {\n      It: gt,\n      Ht: ct,\n      Lt: lt\n    };\n  };\n};\n\nconst prepareUpdateHints = (t, n, o) => {\n  const s = {};\n  const e = n || {};\n  const c = keys(t).concat(keys(e));\n  each(c, (n => {\n    const c = t[n];\n    const r = e[n];\n    s[n] = !!(o || c || r);\n  }));\n  return s;\n};\n\nconst createStructureSetupUpdate = (t, n) => {\n  const {Z: o, K: s, ht: e, ft: c} = t;\n  const {A: r, I: l, Y: i} = getEnvironment();\n  const a = !r && (l.x || l.y);\n  const u = [ createTrinsicUpdateSegment(t, n), createPaddingUpdateSegment(t, n), createOverflowUpdateSegment(t, n) ];\n  return (t, n, r) => {\n    const l = prepareUpdateHints(assignDeep({\n      wt: false,\n      xt: false,\n      St: false,\n      vt: false,\n      Ht: false,\n      Lt: false,\n      It: false,\n      Tt: false,\n      bt: false,\n      Pt: false\n    }, n), {}, r);\n    const f = a || !i;\n    const d = f && scrollLeft(s);\n    const _ = f && scrollTop(s);\n    e(\"\", D, true);\n    let h = l;\n    each(u, (n => {\n      h = prepareUpdateHints(h, n(h, t, !!r) || {}, r);\n    }));\n    scrollLeft(s, d);\n    scrollTop(s, _);\n    e(\"\", D);\n    if (!c) {\n      scrollLeft(o, 0);\n      scrollTop(o, 0);\n    }\n    return h;\n  };\n};\n\nconst createEventContentChange = (t, n, o) => {\n  let s;\n  let e = false;\n  const destroy = () => {\n    e = true;\n  };\n  const updateElements = c => {\n    if (o) {\n      const r = o.reduce(((n, o) => {\n        if (o) {\n          const [s, e] = o;\n          const r = e && s && (c ? c(s) : find(s, t));\n          if (r && r.length && e && isString(e)) {\n            push(n, [ r, e.trim() ], true);\n          }\n        }\n        return n;\n      }), []);\n      each(r, (o => each(o[0], (c => {\n        const r = o[1];\n        const l = s.get(c) || [];\n        const i = t.contains(c);\n        if (i) {\n          const t = on(c, r, (o => {\n            if (e) {\n              t();\n              s.delete(c);\n            } else {\n              n(o);\n            }\n          }));\n          s.set(c, push(l, t));\n        } else {\n          runEachAndClear(l);\n          s.delete(c);\n        }\n      }))));\n    }\n  };\n  if (o) {\n    s = new WeakMap;\n    updateElements();\n  }\n  return [ destroy, updateElements ];\n};\n\nconst createDOMObserver = (t, n, o, s) => {\n  let e = false;\n  const {Mt: c, Dt: r, Rt: l, kt: a, Bt: u, Vt: f} = s || {};\n  const d = debounce((() => {\n    if (e) {\n      o(true);\n    }\n  }), {\n    g: 33,\n    v: 99\n  });\n  const [_, h] = createEventContentChange(t, d, l);\n  const g = c || [];\n  const v = r || [];\n  const p = g.concat(v);\n  const observerCallback = (e, c) => {\n    const r = u || noop;\n    const l = f || noop;\n    const i = new Set;\n    const d = new Set;\n    let _ = false;\n    let g = false;\n    each(e, (o => {\n      const {attributeName: e, target: c, type: u, oldValue: f, addedNodes: h, removedNodes: p} = o;\n      const w = \"attributes\" === u;\n      const b = \"childList\" === u;\n      const m = t === c;\n      const y = w && isString(e) ? attr(c, e) : 0;\n      const S = 0 !== y && f !== y;\n      const $ = indexOf(v, e) > -1 && S;\n      if (n && (b || !m)) {\n        const n = !w;\n        const u = w && S;\n        const d = u && a && is(c, a);\n        const _ = d ? !r(c, e, f, y) : n || u;\n        const v = _ && !l(o, !!d, t, s);\n        each(h, (t => i.add(t)));\n        each(p, (t => i.add(t)));\n        g = g || v;\n      }\n      if (!n && m && S && !r(c, e, f, y)) {\n        d.add(e);\n        _ = _ || $;\n      }\n    }));\n    if (i.size > 0) {\n      h((t => from(i).reduce(((n, o) => {\n        push(n, find(t, o));\n        return is(o, t) ? push(n, o) : n;\n      }), [])));\n    }\n    if (n) {\n      !c && g && o(false);\n      return [ false ];\n    }\n    if (d.size > 0 || _) {\n      const t = [ from(d), _ ];\n      !c && o.apply(0, t);\n      return t;\n    }\n  };\n  const w = new i((t => observerCallback(t)));\n  w.observe(t, {\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: p,\n    subtree: n,\n    childList: n,\n    characterData: n\n  });\n  e = true;\n  return [ () => {\n    if (e) {\n      _();\n      w.disconnect();\n      e = false;\n    }\n  }, () => {\n    if (e) {\n      d.m();\n      const t = w.takeRecords();\n      return !isEmptyArray(t) && observerCallback(t, true);\n    }\n  } ];\n};\n\nconst Gt = 3333333;\n\nconst createSizeObserver = (t, n, o) => {\n  const {Yt: s = false, Pt: e = false} = o || {};\n  const c = getPlugins()[Ot];\n  const {V: r} = getEnvironment();\n  const l = createDOM(`<div class=\"${q}\"><div class=\"${G}\"></div></div>`);\n  const i = l[0];\n  const a = i.firstChild;\n  const f = directionIsRTL.bind(0, t);\n  const [d] = createCache({\n    o: void 0,\n    _: true,\n    u: (t, n) => !(!t || !domRectHasDimensions(t) && domRectHasDimensions(n))\n  });\n  const onSizeChangedCallbackProxy = t => {\n    const o = isArray(t) && t.length > 0 && isObject(t[0]);\n    const e = !o && isBoolean(t[0]);\n    let c = false;\n    let l = false;\n    let a = true;\n    if (o) {\n      const [n, , o] = d(t.pop().contentRect);\n      const s = domRectHasDimensions(n);\n      const e = domRectHasDimensions(o);\n      const r = !o;\n      c = r && !!e || !s;\n      l = !e && s;\n      a = !c;\n    } else if (e) {\n      [, a] = t;\n    } else {\n      l = true === t;\n    }\n    if (s && a) {\n      const n = e ? t[0] : directionIsRTL(i);\n      scrollLeft(i, n ? r.n ? -Gt : r.i ? 0 : Gt : Gt);\n      scrollTop(i, Gt);\n    }\n    if (!c) {\n      n({\n        wt: !e,\n        jt: e ? t : void 0,\n        Pt: !!l\n      });\n    }\n  };\n  const _ = [];\n  let h = e ? onSizeChangedCallbackProxy : false;\n  return [ () => {\n    runEachAndClear(_);\n    removeElements(i);\n  }, () => {\n    if (u) {\n      const t = new u(onSizeChangedCallbackProxy);\n      t.observe(a);\n      push(_, (() => {\n        t.disconnect();\n      }));\n    } else if (c) {\n      const [t, n] = c.O(a, onSizeChangedCallbackProxy, e);\n      h = t;\n      push(_, n);\n    }\n    if (s) {\n      const [t] = createCache({\n        o: void 0\n      }, f);\n      push(_, on(i, \"scroll\", (n => {\n        const o = t();\n        const [s, e, c] = o;\n        if (e) {\n          removeClass(a, \"ltr rtl\");\n          if (s) {\n            addClass(a, \"rtl\");\n          } else {\n            addClass(a, \"ltr\");\n          }\n          onSizeChangedCallbackProxy([ !!s, e, c ]);\n        }\n        stopPropagation(n);\n      })));\n    }\n    if (h) {\n      addClass(i, F);\n      push(_, on(i, \"animationstart\", h, {\n        C: !!u\n      }));\n    }\n    if (u || c) {\n      appendChildren(t, i);\n    }\n  } ];\n};\n\nconst isHeightIntrinsic = t => 0 === t.h || t.isIntersecting || t.intersectionRatio > 0;\n\nconst createTrinsicObserver = (t, n) => {\n  let o;\n  const s = createDiv(Z);\n  const e = [];\n  const [c] = createCache({\n    o: false\n  });\n  const triggerOnTrinsicChangedCallback = (t, o) => {\n    if (t) {\n      const s = c(isHeightIntrinsic(t));\n      const [, e] = s;\n      if (e) {\n        !o && n(s);\n        return [ s ];\n      }\n    }\n  };\n  const intersectionObserverCallback = (t, n) => {\n    if (t && t.length > 0) {\n      return triggerOnTrinsicChangedCallback(t.pop(), n);\n    }\n  };\n  return [ () => {\n    runEachAndClear(e);\n    removeElements(s);\n  }, () => {\n    if (a) {\n      o = new a((t => intersectionObserverCallback(t)), {\n        root: t\n      });\n      o.observe(s);\n      push(e, (() => {\n        o.disconnect();\n      }));\n    } else {\n      const onSizeChanged = () => {\n        const t = offsetSize(s);\n        triggerOnTrinsicChangedCallback(t);\n      };\n      const [t, n] = createSizeObserver(s, onSizeChanged);\n      push(e, t);\n      n();\n      onSizeChanged();\n    }\n    appendChildren(t, s);\n  }, () => {\n    if (o) {\n      return intersectionObserverCallback(o.takeRecords(), true);\n    }\n  } ];\n};\n\nconst Xt = `[${A}]`;\n\nconst Ut = `[${R}]`;\n\nconst Wt = [ \"tabindex\" ];\n\nconst Zt = [ \"wrap\", \"cols\", \"rows\" ];\n\nconst Jt = [ \"id\", \"class\", \"style\", \"open\" ];\n\nconst createStructureSetupObservers = (t, n, o) => {\n  let s;\n  let e;\n  let c;\n  const {J: r, K: l, nt: i, lt: a, ft: f, _t: d, ht: _} = t;\n  const {Y: h} = getEnvironment();\n  const [g] = createCache({\n    u: equalWH,\n    o: {\n      w: 0,\n      h: 0\n    }\n  }, (() => {\n    const t = d(V, L);\n    const n = d(k, \"\");\n    const o = n && scrollLeft(l);\n    const s = n && scrollTop(l);\n    _(V, L);\n    _(k, \"\");\n    _(\"\", D, true);\n    const e = scrollSize(i);\n    const c = scrollSize(l);\n    const r = fractionalSize(l);\n    _(V, L, t);\n    _(k, \"\", n);\n    _(\"\", D);\n    scrollLeft(l, o);\n    scrollTop(l, s);\n    return {\n      w: c.w + e.w + r.w,\n      h: c.h + e.h + r.h\n    };\n  }));\n  const v = a ? Zt : Jt.concat(Zt);\n  const p = debounce(o, {\n    g: () => s,\n    v: () => e,\n    p(t, n) {\n      const [o] = t;\n      const [s] = n;\n      return [ keys(o).concat(keys(s)).reduce(((t, n) => {\n        t[n] = o[n] || s[n];\n        return t;\n      }), {}) ];\n    }\n  });\n  const updateViewportAttrsFromHost = t => {\n    each(t || Wt, (t => {\n      if (indexOf(Wt, t) > -1) {\n        const n = attr(r, t);\n        if (isString(n)) {\n          attr(l, t, n);\n        } else {\n          removeAttr(l, t);\n        }\n      }\n    }));\n  };\n  const onTrinsicChanged = (t, s) => {\n    const [e, c] = t;\n    const r = {\n      vt: c\n    };\n    n({\n      gt: e\n    });\n    !s && o(r);\n    return r;\n  };\n  const onSizeChanged = ({wt: t, jt: s, Pt: e}) => {\n    const c = !t || e ? o : p;\n    let r = false;\n    if (s) {\n      const [t, o] = s;\n      r = o;\n      n({\n        yt: t\n      });\n    }\n    c({\n      wt: t,\n      Pt: e,\n      St: r\n    });\n  };\n  const onContentMutation = (t, n) => {\n    const [, s] = g();\n    const e = {\n      bt: s\n    };\n    const c = t ? o : p;\n    if (s) {\n      !n && c(e);\n    }\n    return e;\n  };\n  const onHostMutation = (t, n, o) => {\n    const s = {\n      Tt: n\n    };\n    if (n) {\n      !o && p(s);\n    } else if (!f) {\n      updateViewportAttrsFromHost(t);\n    }\n    return s;\n  };\n  const [w, b, m] = i || !h ? createTrinsicObserver(r, onTrinsicChanged) : [ noop, noop, noop ];\n  const [y, S] = !f ? createSizeObserver(r, onSizeChanged, {\n    Pt: true,\n    Yt: true\n  }) : [ noop, noop ];\n  const [$, x] = createDOMObserver(r, false, onHostMutation, {\n    Dt: Jt,\n    Mt: Jt.concat(Wt)\n  });\n  let C;\n  const O = f && u && new u((t => {\n    const n = t[t.length - 1].contentRect;\n    const o = domRectHasDimensions(n);\n    const s = domRectHasDimensions(C);\n    const e = !s && o;\n    onSizeChanged({\n      wt: true,\n      Pt: e\n    });\n    C = n;\n  }));\n  return [ () => {\n    w();\n    y();\n    c && c[0]();\n    O && O.disconnect();\n    $();\n  }, () => {\n    O && O.observe(r);\n    updateViewportAttrsFromHost();\n    S();\n    b();\n  }, () => {\n    const t = {};\n    const n = x();\n    const o = m();\n    const s = c && c[1]();\n    if (n) {\n      assignDeep(t, onHostMutation.apply(0, push(n, true)));\n    }\n    if (o) {\n      assignDeep(t, onTrinsicChanged.apply(0, push(o, true)));\n    }\n    if (s) {\n      assignDeep(t, onContentMutation.apply(0, push(s, true)));\n    }\n    return t;\n  }, t => {\n    const [n] = t(\"update.ignoreMutation\");\n    const [o, r] = t(\"update.attributes\");\n    const [a, u] = t(\"update.elementEvents\");\n    const [d, _] = t(\"update.debounce\");\n    const h = u || r;\n    const ignoreMutationFromOptions = t => isFunction(n) && n(t);\n    if (h) {\n      if (c) {\n        c[1]();\n        c[0]();\n      }\n      c = createDOMObserver(i || l, true, onContentMutation, {\n        Mt: v.concat(o || []),\n        Rt: a,\n        kt: Xt,\n        Vt: (t, n) => {\n          const {target: o, attributeName: s} = t;\n          const e = !n && s && !f ? liesBetween(o, Xt, Ut) : false;\n          return e || !!closest(o, `.${Q}`) || !!ignoreMutationFromOptions(t);\n        }\n      });\n    }\n    if (_) {\n      p.m();\n      if (isArray(d)) {\n        const t = d[0];\n        const n = d[1];\n        s = isNumber(t) && t;\n        e = isNumber(n) && n;\n      } else if (isNumber(d)) {\n        s = d;\n        e = false;\n      } else {\n        s = false;\n        e = false;\n      }\n    }\n  } ];\n};\n\nconst Kt = {\n  x: 0,\n  y: 0\n};\n\nconst createInitialStructureSetupUpdateState = t => ({\n  tt: {\n    t: 0,\n    r: 0,\n    b: 0,\n    l: 0\n  },\n  $t: false,\n  P: {\n    marginRight: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    paddingLeft: 0\n  },\n  zt: Kt,\n  Et: Kt,\n  Ot: {\n    x: \"hidden\",\n    y: \"hidden\"\n  },\n  At: {\n    x: false,\n    y: false\n  },\n  gt: false,\n  yt: directionIsRTL(t.J)\n});\n\nconst createStructureSetup = (t, n) => {\n  const o = createOptionCheck(n, {});\n  const [s, e, c] = createEventListenerHub();\n  const [r, l, i] = createStructureSetupElements(t);\n  const a = createState(createInitialStructureSetupUpdateState(r));\n  const [u, f] = a;\n  const d = createStructureSetupUpdate(r, a);\n  const triggerUpdateEvent = (t, n, o) => {\n    const s = keys(t).some((n => !!t[n]));\n    const e = s || !isEmptyObject(n) || o;\n    if (e) {\n      c(\"u\", [ t, n, o ]);\n    }\n    return e;\n  };\n  const [_, h, g, v] = createStructureSetupObservers(r, f, (t => triggerUpdateEvent(d(o, t), {}, false)));\n  const p = u.bind(0);\n  p.Nt = t => s(\"u\", t);\n  p.qt = () => {\n    const {Z: t, K: n, rt: o, it: s} = r;\n    const e = s ? o.documentElement : t;\n    const c = scrollLeft(e);\n    const i = scrollTop(e);\n    h();\n    l();\n    scrollLeft(n, c);\n    scrollTop(n, i);\n  };\n  p.Ft = r;\n  return [ (t, o) => {\n    const s = createOptionCheck(n, t, o);\n    v(s);\n    return triggerUpdateEvent(d(s, g(), o), t, !!o);\n  }, p, () => {\n    e();\n    _();\n    i();\n  } ];\n};\n\nconst {round: Qt} = Math;\n\nconst getScale = t => {\n  const {width: n, height: o} = getBoundingClientRect(t);\n  const {w: s, h: e} = offsetSize(t);\n  return {\n    x: Qt(n) / s || 1,\n    y: Qt(o) / e || 1\n  };\n};\n\nconst continuePointerDown = (t, n, o) => {\n  const s = n.scrollbars;\n  const {button: e, isPrimary: c, pointerType: r} = t;\n  const {pointers: l} = s;\n  return 0 === e && c && s[o ? \"dragScroll\" : \"clickScroll\"] && (l || []).includes(r);\n};\n\nconst tn = \"pointerup pointerleave pointercancel lostpointercapture\";\n\nconst getScrollTimelineAnimation = t => ({\n  transform: [ getTrasformTranslateValue(`0%`, t), getTrasformTranslateValue(\"-100%\", t) ],\n  [t ? \"left\" : \"top\"]: [ \"0%\", \"100%\" ]\n});\n\nconst createRootClickStopPropagationEvents = (t, n) => on(t, \"mousedown\", on.bind(0, n, \"click\", stopPropagation, {\n  C: true,\n  $: true\n}), {\n  $: true\n});\n\nconst createInteractiveScrollEvents = (t, n, o, s, e, c, r) => {\n  const {V: l} = getEnvironment();\n  const {Gt: i, Xt: a, Ut: u} = s;\n  const f = `scroll${r ? \"Left\" : \"Top\"}`;\n  const d = `client${r ? \"X\" : \"Y\"}`;\n  const _ = r ? \"width\" : \"height\";\n  const h = r ? \"left\" : \"top\";\n  const g = r ? \"w\" : \"h\";\n  const v = r ? \"x\" : \"y\";\n  const createRelativeHandleMove = (t, n) => o => {\n    const {Et: s} = c();\n    const d = offsetSize(a)[g] - offsetSize(i)[g];\n    const _ = n * o / d;\n    const h = _ * s[v];\n    const p = directionIsRTL(u);\n    const w = p && r ? l.n || l.i ? 1 : -1 : 1;\n    e[f] = t + h * w;\n  };\n  return on(a, \"pointerdown\", (s => {\n    const c = closest(s.target, `.${et}`) === i;\n    const r = c ? i : a;\n    attrClass(n, A, M, true);\n    if (continuePointerDown(s, t, c)) {\n      const t = !c && s.shiftKey;\n      const getHandleRect = () => getBoundingClientRect(i);\n      const getTrackRect = () => getBoundingClientRect(a);\n      const getHandleOffset = (t, n) => (t || getHandleRect())[h] - (n || getTrackRect())[h];\n      const l = createRelativeHandleMove(e[f] || 0, 1 / getScale(e)[v]);\n      const u = s[d];\n      const g = getHandleRect();\n      const p = getTrackRect();\n      const w = g[_];\n      const b = getHandleOffset(g, p) + w / 2;\n      const m = u - p[h];\n      const y = c ? 0 : m - b;\n      const releasePointerCapture = t => {\n        runEachAndClear(S);\n        r.releasePointerCapture(t.pointerId);\n      };\n      const S = [ attrClass.bind(0, n, A, M), on(o, tn, releasePointerCapture), on(o, \"selectstart\", (t => preventDefault(t)), {\n        S: false\n      }), on(a, tn, releasePointerCapture), on(a, \"pointermove\", (n => {\n        const o = n[d] - u;\n        if (c || t) {\n          l(y + o);\n        }\n      })) ];\n      if (t) {\n        l(y);\n      } else if (!c) {\n        const t = getPlugins()[Lt];\n        if (t) {\n          push(S, t.O(l, getHandleOffset, y, w, m));\n        }\n      }\n      r.setPointerCapture(s.pointerId);\n    }\n  }));\n};\n\nconst createScrollTimelineEvents = ({Gt: t}, n, o) => {\n  if (!n) {\n    return noop;\n  }\n  const s = t.animate(getScrollTimelineAnimation(o), {\n    timeline: n\n  });\n  return () => {\n    s.cancel();\n  };\n};\n\nconst createScrollbarsSetupEvents = (t, n) => (o, s, e, c, r, l, i) => {\n  const {Ut: a} = o;\n  const [u, f] = selfClearTimeout(333);\n  const d = !!r.scrollBy;\n  let _ = true;\n  return runEachAndClear.bind(0, [ on(a, \"pointerenter\", (() => {\n    s(it, true);\n  })), on(a, \"pointerleave pointercancel\", (() => {\n    s(it);\n  })), on(a, \"wheel\", (t => {\n    const {deltaX: n, deltaY: o, deltaMode: e} = t;\n    if (d && _ && 0 === e && parent(a) === c) {\n      r.scrollBy({\n        left: n,\n        top: o,\n        behavior: \"smooth\"\n      });\n    }\n    _ = false;\n    s(dt, true);\n    u((() => {\n      _ = true;\n      s(dt);\n    }));\n    preventDefault(t);\n  }), {\n    S: false,\n    $: true\n  }), createRootClickStopPropagationEvents(a, e), createInteractiveScrollEvents(t, c, e, o, r, n, i), createScrollTimelineEvents(o, l, i), f ]);\n};\n\nconst {min: nn, max: sn, abs: en, round: cn} = Math;\n\nconst getScrollbarHandleLengthRatio = (t, n, o, s) => {\n  if (s) {\n    const t = o ? \"x\" : \"y\";\n    const {Et: n, zt: e} = s;\n    const c = e[t];\n    const r = n[t];\n    return sn(0, nn(1, c / (c + r)));\n  }\n  const e = o ? \"width\" : \"height\";\n  const c = getBoundingClientRect(t)[e];\n  const r = getBoundingClientRect(n)[e];\n  return sn(0, nn(1, c / r));\n};\n\nconst getScrollbarHandleOffsetRatio = (t, n, o, s, e, c) => {\n  const {V: r} = getEnvironment();\n  const l = c ? \"x\" : \"y\";\n  const i = c ? \"Left\" : \"Top\";\n  const {Et: a} = s;\n  const u = cn(a[l]);\n  const f = en(o[`scroll${i}`]);\n  const d = c && e;\n  const _ = r.i ? f : u - f;\n  const h = d ? _ : f;\n  const g = nn(1, h / u);\n  const v = getScrollbarHandleLengthRatio(t, n, c);\n  return 1 / v * (1 - v) * g;\n};\n\nconst maxAnimationKeyFrameValue = t => `${Math.max(0, t - .5)}px`;\n\nconst animateScrollbar = (t, n, o, s) => t.animate({\n  transform: [ getTrasformTranslateValue(`0px`, s), getTrasformTranslateValue(maxAnimationKeyFrameValue(o), s) ]\n}, {\n  timeline: n,\n  composite: \"add\"\n});\n\nconst initScrollTimeline = (t, n) => _ ? new _({\n  source: t,\n  axis: n\n}) : null;\n\nconst createScrollbarsSetupElements = (t, n, o) => {\n  const {q: s, H: e} = getEnvironment();\n  const {scrollbars: c} = s();\n  const {slot: r} = c;\n  const {rt: l, Z: i, J: a, K: u, ut: f, st: d, it: _, ft: g} = n;\n  const {scrollbars: v} = f ? {} : t;\n  const {slot: p} = v || {};\n  const w = new Map;\n  const b = initScrollTimeline(d, \"x\");\n  const m = initScrollTimeline(d, \"y\");\n  const y = dynamicInitializationElement([ i, a, u ], (() => g && _ ? i : a), r, p);\n  const doRefreshScrollbarOffset = t => g && !_ && parent(t) === u;\n  const cancelScrollbarsOffsetAnimations = () => {\n    w.forEach((t => {\n      (t || []).forEach((t => {\n        t.cancel();\n      }));\n    }));\n  };\n  const scrollbarStructureAddRemoveClass = (t, n, o) => {\n    const s = o ? addClass : removeClass;\n    each(t, (t => {\n      s(t.Ut, n);\n    }));\n  };\n  const scrollbarStyle = (t, n) => {\n    each(t, (t => {\n      const [o, s] = n(t);\n      style(o, s);\n    }));\n  };\n  const scrollbarStructureRefreshHandleLength = (t, n, o) => {\n    scrollbarStyle(t, (t => {\n      const {Gt: s, Xt: e} = t;\n      return [ s, {\n        [o ? \"width\" : \"height\"]: `${(100 * getScrollbarHandleLengthRatio(s, e, o, n)).toFixed(3)}%`\n      } ];\n    }));\n  };\n  const scrollbarStructureRefreshHandleOffset = (t, n, o) => {\n    if (!m && !m) {\n      scrollbarStyle(t, (t => {\n        const {Gt: s, Xt: e, Ut: c} = t;\n        const r = getScrollbarHandleOffsetRatio(s, e, d, n, directionIsRTL(c), o);\n        const l = r === r;\n        return [ s, {\n          transform: l ? getTrasformTranslateValue(`${(100 * r).toFixed(3)}%`, o) : \"\"\n        } ];\n      }));\n    }\n  };\n  const styleScrollbarPosition = t => {\n    const {Ut: n} = t;\n    const o = doRefreshScrollbarOffset(n) && n;\n    return [ o, {\n      transform: o ? getTrasformTranslateValue([ `${scrollLeft(d)}px`, `${scrollTop(d)}px` ]) : \"\"\n    } ];\n  };\n  const S = [];\n  const $ = [];\n  const x = [];\n  const scrollbarsAddRemoveClass = (t, n, o) => {\n    const s = isBoolean(o);\n    const e = s ? o : true;\n    const c = s ? !o : true;\n    e && scrollbarStructureAddRemoveClass($, t, n);\n    c && scrollbarStructureAddRemoveClass(x, t, n);\n  };\n  const refreshScrollbarsHandleLength = t => {\n    scrollbarStructureRefreshHandleLength($, t, true);\n    scrollbarStructureRefreshHandleLength(x, t);\n  };\n  const refreshScrollbarsHandleOffset = t => {\n    scrollbarStructureRefreshHandleOffset($, t, true);\n    scrollbarStructureRefreshHandleOffset(x, t);\n  };\n  const refreshScrollbarsScrollbarOffset = () => {\n    if (!m && !m) {\n      g && scrollbarStyle($, styleScrollbarPosition);\n      g && scrollbarStyle(x, styleScrollbarPosition);\n    }\n  };\n  const refreshScrollbarsScrollbarOffsetTimeline = ({Et: t}) => {\n    cancelScrollbarsOffsetAnimations();\n    x.concat($).forEach((({Ut: n}) => {\n      if (doRefreshScrollbarOffset(n)) {\n        w.set(n, [ animateScrollbar(n, b, t.x, true), animateScrollbar(n, m, t.y) ]);\n      }\n    }));\n  };\n  const generateScrollbarDOM = t => {\n    const n = t ? nt : ot;\n    const s = t ? $ : x;\n    const c = isEmptyArray(s) ? lt : \"\";\n    const r = createDiv(`${Q} ${n} ${c}`);\n    const i = createDiv(st);\n    const u = createDiv(et);\n    const f = {\n      Ut: r,\n      Xt: i,\n      Gt: u\n    };\n    if (!e) {\n      addClass(r, J);\n    }\n    appendChildren(r, i);\n    appendChildren(i, u);\n    push(s, f);\n    push(S, [ () => {\n      cancelScrollbarsOffsetAnimations();\n      w.clear();\n    }, removeElements.bind(0, r), o(f, scrollbarsAddRemoveClass, l, a, d, t ? b : m, t) ]);\n    return f;\n  };\n  const C = generateScrollbarDOM.bind(0, true);\n  const O = generateScrollbarDOM.bind(0, false);\n  const appendElements = () => {\n    appendChildren(y, $[0].Ut);\n    appendChildren(y, x[0].Ut);\n    h((() => {\n      scrollbarsAddRemoveClass(lt);\n    }), 300);\n  };\n  C();\n  O();\n  return [ {\n    Wt: refreshScrollbarsHandleLength,\n    Zt: refreshScrollbarsHandleOffset,\n    Jt: refreshScrollbarsScrollbarOffsetTimeline,\n    Kt: refreshScrollbarsScrollbarOffset,\n    Qt: scrollbarsAddRemoveClass,\n    tn: {\n      B: b,\n      nn: $,\n      sn: C,\n      en: scrollbarStyle.bind(0, $)\n    },\n    cn: {\n      B: m,\n      nn: x,\n      sn: O,\n      en: scrollbarStyle.bind(0, x)\n    }\n  }, appendElements, runEachAndClear.bind(0, S) ];\n};\n\nconst createScrollbarsSetup = (t, n, o, s) => {\n  let e;\n  let c;\n  let r;\n  let l;\n  let i;\n  let a = 0;\n  const u = createState({});\n  const [f] = u;\n  const [d, _] = selfClearTimeout();\n  const [h, g] = selfClearTimeout();\n  const [v, p] = selfClearTimeout(100);\n  const [w, b] = selfClearTimeout(100);\n  const [m, y] = selfClearTimeout(100);\n  const [S, $] = selfClearTimeout((() => a));\n  const [x, C, O] = createScrollbarsSetupElements(t, o.Ft, createScrollbarsSetupEvents(n, o));\n  const {J: T, et: z, it: E} = o.Ft;\n  const {Qt: A, Wt: I, Zt: H, Jt: L, Kt: P} = x;\n  const manageAutoHideSuspension = t => {\n    A(ut, t, true);\n    A(ut, t, false);\n  };\n  const manageScrollbarsAutoHide = (t, n) => {\n    $();\n    if (t) {\n      A(ft);\n    } else {\n      const hide = () => A(ft, true);\n      if (a > 0 && !n) {\n        S(hide);\n      } else {\n        hide();\n      }\n    }\n  };\n  const onHostMouseEnter = () => {\n    l = c;\n    l && manageScrollbarsAutoHide(true);\n  };\n  const M = [ p, $, b, y, g, _, O, on(T, \"pointerover\", onHostMouseEnter, {\n    C: true\n  }), on(T, \"pointerenter\", onHostMouseEnter), on(T, \"pointerleave\", (() => {\n    l = false;\n    c && manageScrollbarsAutoHide(false);\n  })), on(T, \"pointermove\", (() => {\n    e && d((() => {\n      p();\n      manageScrollbarsAutoHide(true);\n      w((() => {\n        e && manageScrollbarsAutoHide(false);\n      }));\n    }));\n  })), on(z, \"scroll\", (t => {\n    h((() => {\n      H(o());\n      r && manageScrollbarsAutoHide(true);\n      v((() => {\n        r && !l && manageScrollbarsAutoHide(false);\n      }));\n    }));\n    s(t);\n    P();\n  })) ];\n  const D = f.bind(0);\n  D.Ft = x;\n  D.qt = C;\n  return [ (t, s, l) => {\n    const {Ht: u, Lt: f, It: d, St: _, Pt: h} = l;\n    const {I: g} = getEnvironment();\n    const v = createOptionCheck(n, t, s);\n    const p = o();\n    const {Et: w, Ot: b, yt: y, At: S} = p;\n    const [$, x] = v(\"showNativeOverlaidScrollbars\");\n    const [C, O] = v(\"scrollbars.theme\");\n    const [T, D] = v(\"scrollbars.visibility\");\n    const [R, k] = v(\"scrollbars.autoHide\");\n    const [B, V] = v(\"scrollbars.autoHideSuspend\");\n    const [Y] = v(\"scrollbars.autoHideDelay\");\n    const [j, N] = v(\"scrollbars.dragScroll\");\n    const [q, F] = v(\"scrollbars.clickScroll\");\n    const G = h && !s;\n    const X = u || f || _;\n    const U = d || D;\n    const W = $ && g.x && g.y;\n    const setScrollbarVisibility = (t, n) => {\n      const o = \"visible\" === T || \"auto\" === T && \"scroll\" === t;\n      A(ct, o, n);\n      return o;\n    };\n    a = Y;\n    if (x) {\n      A(K, W);\n    }\n    if (O) {\n      A(i);\n      A(C, true);\n      i = C;\n    }\n    if (V || G) {\n      if (B && G && (S.x || S.y)) {\n        manageAutoHideSuspension(false);\n        m((() => M.push(on(z, \"scroll\", manageAutoHideSuspension.bind(0, true), {\n          C: true\n        }))));\n      } else {\n        manageAutoHideSuspension(true);\n      }\n    }\n    if (k) {\n      e = \"move\" === R;\n      c = \"leave\" === R;\n      r = \"never\" !== R;\n      manageScrollbarsAutoHide(!r, true);\n    }\n    if (N) {\n      A(ht, j);\n    }\n    if (F) {\n      A(_t, q);\n    }\n    if (U) {\n      const t = setScrollbarVisibility(b.x, true);\n      const n = setScrollbarVisibility(b.y, false);\n      const o = t && n;\n      A(rt, !o);\n    }\n    if (X) {\n      I(p);\n      H(p);\n      L(p);\n      P();\n      A(at, !w.x, true);\n      A(at, !w.y, false);\n      A(tt, y && !E);\n    }\n  }, D, runEachAndClear.bind(0, M) ];\n};\n\nconst invokePluginInstance = (t, n, o) => {\n  if (isFunction(t)) {\n    t(n || void 0, o || void 0);\n  }\n};\n\nconst OverlayScrollbars = (t, n, o) => {\n  const {G: s, q: e, j: c, N: r} = getEnvironment();\n  const l = getPlugins();\n  const i = isHTMLElement(t);\n  const a = i ? t : t.target;\n  const u = getInstance(a);\n  if (n && !u) {\n    let u = false;\n    const validateOptions = t => {\n      const n = getPlugins()[$t];\n      const o = n && n.O;\n      return o ? o(t, true) : t;\n    };\n    const f = assignDeep({}, s(), validateOptions(n));\n    const [d, _, h] = createEventListenerHub(o);\n    const [g, v, p] = createStructureSetup(t, f);\n    const [w, b, m] = createScrollbarsSetup(t, f, v, (t => h(\"scroll\", [ x, t ])));\n    const update = (t, n) => g(t, !!n);\n    const y = update.bind(0, {}, true);\n    const S = c(y);\n    const $ = r(y);\n    const destroy = t => {\n      removeInstance(a);\n      S();\n      $();\n      m();\n      p();\n      u = true;\n      h(\"destroyed\", [ x, !!t ]);\n      _();\n    };\n    const x = {\n      options(t, n) {\n        if (t) {\n          const o = n ? s() : {};\n          const e = getOptionsDiff(f, assignDeep(o, validateOptions(t)));\n          if (!isEmptyObject(e)) {\n            assignDeep(f, e);\n            update(e);\n          }\n        }\n        return assignDeep({}, f);\n      },\n      on: d,\n      off: (t, n) => {\n        t && n && _(t, n);\n      },\n      state() {\n        const {zt: t, Et: n, Ot: o, At: s, tt: e, $t: c, yt: r} = v();\n        return assignDeep({}, {\n          overflowEdge: t,\n          overflowAmount: n,\n          overflowStyle: o,\n          hasOverflow: s,\n          padding: e,\n          paddingAbsolute: c,\n          directionRTL: r,\n          destroyed: u\n        });\n      },\n      elements() {\n        const {Z: t, J: n, tt: o, K: s, nt: e, st: c, et: r} = v.Ft;\n        const {tn: l, cn: i} = b.Ft;\n        const translateScrollbarStructure = t => {\n          const {Gt: n, Xt: o, Ut: s} = t;\n          return {\n            scrollbar: s,\n            track: o,\n            handle: n\n          };\n        };\n        const translateScrollbarsSetupElement = t => {\n          const {nn: n, sn: o} = t;\n          const s = translateScrollbarStructure(n[0]);\n          return assignDeep({}, s, {\n            clone: () => {\n              const t = translateScrollbarStructure(o());\n              w({}, true, {});\n              return t;\n            }\n          });\n        };\n        return assignDeep({}, {\n          target: t,\n          host: n,\n          padding: o || s,\n          viewport: s,\n          content: e || s,\n          scrollOffsetElement: c,\n          scrollEventElement: r,\n          scrollbarHorizontal: translateScrollbarsSetupElement(l),\n          scrollbarVertical: translateScrollbarsSetupElement(i)\n        });\n      },\n      update: t => update({}, t),\n      destroy: destroy.bind(0)\n    };\n    v.Nt(((t, n, o) => {\n      w(n, o, t);\n    }));\n    addInstance(a, x);\n    each(keys(l), (t => invokePluginInstance(l[t], 0, x)));\n    if (cancelInitialization(v.Ft.it, e().cancel, !i && t.cancel)) {\n      destroy(true);\n      return x;\n    }\n    v.qt();\n    b.qt();\n    h(\"initialized\", [ x ]);\n    v.Nt(((t, n, o) => {\n      const {wt: s, St: e, vt: c, Ht: r, Lt: l, It: i, bt: a, Tt: u} = t;\n      h(\"updated\", [ x, {\n        updateHints: {\n          sizeChanged: s,\n          directionChanged: e,\n          heightIntrinsicChanged: c,\n          overflowEdgeChanged: r,\n          overflowAmountChanged: l,\n          overflowStyleChanged: i,\n          contentMutation: a,\n          hostMutation: u\n        },\n        changedOptions: n,\n        force: o\n      } ]);\n    }));\n    x.update(true);\n    return x;\n  }\n  return u;\n};\n\nOverlayScrollbars.plugin = t => {\n  each(addPlugin(t), (t => invokePluginInstance(t, OverlayScrollbars)));\n};\n\nOverlayScrollbars.valid = t => {\n  const n = t && t.elements;\n  const o = isFunction(n) && n();\n  return isPlainObject(o) && !!getInstance(o.target);\n};\n\nOverlayScrollbars.env = () => {\n  const {k: t, I: n, A: o, V: s, Y: e, H: c, B: r, U: l, W: i, q: a, F: u, G: f, X: d} = getEnvironment();\n  return assignDeep({}, {\n    scrollbarsSize: t,\n    scrollbarsOverlaid: n,\n    scrollbarsHiding: o,\n    rtlScrollBehavior: s,\n    flexboxGlue: e,\n    cssCustomProperties: c,\n    scrollTimeline: r,\n    staticDefaultInitialization: l,\n    staticDefaultOptions: i,\n    getDefaultInitialization: a,\n    setDefaultInitialization: u,\n    getDefaultOptions: f,\n    setDefaultOptions: d\n  });\n};\n\nexport { Pt as ClickScrollPlugin, OverlayScrollbars, Ht as ScrollbarsHidingPlugin, Tt as SizeObserverPlugin };\n//# sourceMappingURL=overlayscrollbars.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import \"../scss/nice-select2.scss\";\r\nimport { autoUpdate, computePosition, flip, offset, size } from \"@floating-ui/dom\";\r\n\r\nimport { OverlayScrollbars } from 'overlayscrollbars';\r\n\r\nimport scrollIntoView from 'scroll-into-view';\r\n\r\n// utility functions\r\nfunction triggerClick(el) {\r\n\tvar event = document.createEvent(\"MouseEvents\");\r\n\tevent.initEvent(\"click\", true, false);\r\n\tel.dispatchEvent(event);\r\n}\r\n\r\nfunction triggerChange(el) {\r\n\tvar event = document.createEvent(\"HTMLEvents\");\r\n\tevent.initEvent(\"change\", true, false);\r\n\tel.dispatchEvent(event);\r\n}\r\n\r\nfunction triggerFocusIn(el) {\r\n\tvar event = document.createEvent(\"FocusEvent\");\r\n\tevent.initEvent(\"focusin\", true, false);\r\n\tel.dispatchEvent(event);\r\n}\r\n\r\nfunction triggerFocusOut(el) {\r\n\tvar event = document.createEvent(\"FocusEvent\");\r\n\tevent.initEvent(\"focusout\", true, false);\r\n\tel.dispatchEvent(event);\r\n}\r\n\r\nfunction triggerModalOpen(el) {\r\n\tvar event = document.createEvent(\"UIEvent\");\r\n\tevent.initEvent(\"modalopen\", true, false);\r\n\tel.dispatchEvent(event);\r\n}\r\n\r\nfunction triggerModalClose(el) {\r\n\tvar event = document.createEvent(\"UIEvent\");\r\n\tevent.initEvent(\"modalclose\", true, false);\r\n\tel.dispatchEvent(event);\r\n}\r\n\r\nfunction triggerValidationMessage(el, type) {\r\n\tif (type == 'invalid') {\r\n\t\taddClass(this.dropdown, 'invalid');\r\n\t\tremoveClass(this.dropdown, 'valid');\r\n\t} else {\r\n\t\taddClass(this.dropdown, 'valid');\r\n\t\tremoveClass(this.dropdown, 'invalid');\r\n\t}\r\n}\r\n\r\nfunction attr(el, key) {\r\n\tif (el[key] != undefined) {\r\n\t\treturn el[key];\r\n\t}\r\n\treturn el.getAttribute(key);\r\n}\r\n\r\nfunction data(el, key) {\r\n\treturn el.getAttribute(\"data-\" + key);\r\n}\r\n\r\nfunction hasClass(el, className) {\r\n\tif (el) {\r\n\t\treturn el.classList.contains(className);\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction addClass(el, className) {\r\n\tif (el) return el.classList.add(className);\r\n}\r\n\r\nfunction removeClass(el, className) {\r\n\tif (el) return el.classList.remove(className);\r\n}\r\n\r\nfunction roundByDPR(value) {\r\n\tconst dpr = window.devicePixelRatio || 1;\r\n\treturn Math.round(value * dpr) / dpr;\r\n}\r\n\r\nconst Bool = (string) => string === 'false' || string === 'undefined' || string === 'null' || string === '0' ? false : !!string;\r\n\r\nvar defaultOptions = {\r\n\tdata: null,\r\n\tfitContent: true,\r\n\tsearchable: false,\r\n\tshowSelectedItems: false,\r\n\tsameWidth: false,\r\n\tavailableHeight: false,\r\n\toffset: 2,\r\n\tplacement: \"bottom-start\"\r\n};\r\n\r\n// var cleanupMenu;\r\n\r\n\r\nexport default class NiceSelect {\r\n\tconstructor(element, options) {\r\n\t\tthis.cleanup;\r\n\t\tthis.finalPosition;\r\n\t\tthis.el = element;\r\n\t\tthis.config = Object.assign({}, defaultOptions, options || {});\r\n\t\tthis.data = this.config.data;\r\n\t\tthis.selectedOptions = [];\r\n\r\n\t\tthis.placeholder = attr(this.el, \"placeholder\") || this.config.placeholder || \"Select an option\";\r\n\t\tthis.searchtext = attr(this.el, \"searchtext\") || this.config.searchtext || \"Search\";\r\n\t\tthis.selectedtext = attr(this.el, \"selectedtext\") || this.config.selectedtext || \"selected\";\r\n\r\n\t\tthis.fitContent = Bool(this.el.dataset.fitContent || this.config.fitContent);\r\n\t\tthis.sameWidth = Bool(this.el.dataset.sameWidth || this.config.sameWidth);\r\n\t\tthis.availableHeight = Bool(this.el.dataset.availableHeight || this.config.availableHeight);\r\n\t\tthis.searchable = Bool(this.el.dataset.searchable || this.config.searchable);\r\n\t\tthis.offset = Number(this.el.dataset.offset || this.config.offset);\r\n\t\tthis.placement = this.el.dataset.placement || this.config.placement;\r\n\t\t\r\n\t\tthis.dropdown = null;\r\n\t\tthis.multiple = attr(this.el, \"multiple\");\r\n\t\tthis.disabled = attr(this.el, \"disabled\");\r\n\r\n\t\tthis.create();\r\n\t}\r\n\r\n\tcreate() {\r\n\t\tthis.el.style.opacity = \"0\";\r\n\t\tthis.el.style.width = \"0\";\r\n\t\tthis.el.style.padding = \"0\";\r\n\t\tthis.el.style.height = \"0\";\r\n\t\tthis.el.style.border = \"0\";\r\n\t\tthis.el.tabIndex = -1;\r\n\t\tif (this.data) {\r\n\t\t\tthis.processData(this.data);\r\n\t\t} else {\r\n\t\t\tthis.extractData();\r\n\t\t}\r\n\r\n\t\tthis.renderDropdown();\r\n\t\tthis.bindEvent();\r\n\t}\r\n\r\n\tprocessData(data) {\r\n\t\tvar options = [];\r\n\t\tdata.forEach(item => {\r\n\t\t\toptions.push({\r\n\t\t\t\tdata: item,\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tselected: !!item.selected,\r\n\t\t\t\t\tdisabled: !!item.disabled,\r\n\t\t\t\t\toptgroup: item.value == 'optgroup'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.options = options;\r\n\t}\r\n\r\n\textractData() {\r\n\t\tvar options = this.el.querySelectorAll(\"option,optgroup\");\r\n\t\tvar data = [];\r\n\t\tvar allOptions = [];\r\n\t\tvar selectedOptions = [];\r\n\r\n\t\toptions.forEach(item => {\r\n\t\t\tif (item.tagName == 'OPTGROUP') {\r\n\t\t\t\tvar itemData = {\r\n\t\t\t\t\ttext: item.label,\r\n\t\t\t\t\tvalue: 'optgroup'\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlet text = item.innerText;\r\n\t\t\t\tlet display = text;\r\n\t\t\t\tif (item.dataset.display != undefined) {\r\n\t\t\t\t\tdisplay = item.dataset.display;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar itemData = {\r\n\t\t\t\t\ttext: text,\r\n\t\t\t\t\tdisplay: display,\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\tselected: item.getAttribute(\"selected\") != null,\r\n\t\t\t\t\tdisabled: item.getAttribute(\"disabled\") != null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = {\r\n\t\t\t\tselected: item.getAttribute(\"selected\") != null,\r\n\t\t\t\tdisabled: item.getAttribute(\"disabled\") != null,\r\n\t\t\t\toptgroup: item.tagName == 'OPTGROUP'\r\n\t\t\t};\r\n\r\n\t\t\tdata.push(itemData);\r\n\t\t\tallOptions.push({ data: itemData, attributes: attributes });\r\n\t\t});\r\n\r\n\t\tthis.data = data;\r\n\t\tthis.options = allOptions;\r\n\t\tthis.options.forEach(item => {\r\n\t\t\tif (item.attributes.selected) {\r\n\t\t\t\tselectedOptions.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.selectedOptions = selectedOptions;\r\n\t}\r\n\r\n\trenderDropdown() {\r\n\t\tvar classes = [\r\n\t\t\t\"nice-select\",\r\n\t\t\tattr(this.el, \"class\") || \"\",\r\n\t\t\tthis.disabled ? \"disabled\" : null,\r\n\t\t\tthis.multiple ? \"has-multiple\" : null\r\n\t\t];\r\n\r\n\t\tlet searchHtml = `<div class=\"nice-select-search-box\">\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"nice-select-search\" placeholder=\"${this.searchtext}...\" title=\"search\"/>\r\n\t\t\t\t\t\t</div>`;\r\n\r\n\t\tvar html = `<div class=\"${classes.join(' ')}\" tabindex=\"${this.disabled ? null : 0}\">\r\n\t\t\t\t\t\t<span class=\"${this.multiple ? 'multiple-options' : 'current'}\"></span>\r\n\t\t\t\t\t</div>`;\r\n\r\n\t\tthis.menu = document.createElement(\"div\");\r\n\t\tthis.menu.classList.add(\"nice-select-dropdown\");\r\n\t\tthis.menu.innerHTML = `${this.searchable ? searchHtml : \"\"} <ul class=\"list\"></ul>`;\r\n\t\tthis.menu.OverlayScrollbars = OverlayScrollbars({\r\n\t\t\ttarget: this.menu,\r\n\t\t\telements: {\r\n\t\t\t\tviewport: this.menu.querySelector('.list'),\r\n\t\t\t}\r\n\t\t},\r\n\t\t\t{\r\n\t\t\t\tpaddingAbsolute: true,\r\n\t\t\t\tscrollbars: {\r\n\t\t\t\t\ttheme: null,\r\n\t\t\t\t\tvisibility: 'visible',\r\n\t\t\t\t\tautoHide: 'never',\r\n\t\t\t\t\tautoHideDelay: 1300,\r\n\t\t\t\t\tdragScroll: true,\r\n\t\t\t\t\tclickScroll: true,\r\n\t\t\t\t\tpointers: ['mouse', 'touch', 'pen'],\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tthis.el.insertAdjacentHTML(\"afterend\", html);\r\n\r\n\t\tthis.dropdown = this.el.nextElementSibling;\r\n\t\tthis._renderSelectedItems();\r\n\t\tthis._renderItems();\r\n\t\t\r\n\t\tif (this.fitContent && !this.el.classList.contains('wide')) {\r\n\t\t\tdocument.body.appendChild(this.menu);\r\n\t\t\tthis.dropdown.style.width = `${this.menu.offsetWidth}px`;\r\n\t\t\tthis.menu.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t_renderSelectedItems() {\r\n\t\tif (this.multiple) {\r\n\t\t\tlet multipleOptions = this.dropdown.querySelector(\".multiple-options\");\r\n\t\t\tvar selectedHtml = \"\";\r\n\t\t\tif (this.config.showSelectedItems || window.getComputedStyle(this.dropdown).width == 'auto' || this.selectedOptions.length < 2) {\r\n\t\t\t\tthis.selectedOptions.forEach(function (item) {\r\n\t\t\t\t\tselectedHtml += `<span class=\"current\">${item.data.text}</span>`;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tselectedHtml = selectedHtml == \"\" ? this.placeholder : selectedHtml;\r\n\t\t\t} else {\r\n\t\t\t\tselectedHtml = this.selectedOptions.length + ' ' + this.selectedtext;\r\n\t\t\t}\r\n\t\t\tthis.selectedOptions.length === 0 ? multipleOptions.classList.add('placeholder') : multipleOptions.classList.remove('placeholder');\r\n\t\t\tmultipleOptions.innerHTML = selectedHtml;\r\n\t\t} else {\r\n\t\t\tlet current = this.dropdown.querySelector(\".current\");\r\n\t\t\tlet html;\r\n\t\t\tif (this.selectedOptions.length > 0 && this.selectedOptions[0].data.value) {\r\n\t\t\t\tcurrent.innerHTML = this.selectedOptions[0].data.text;\r\n\t\t\t\tcurrent.classList.remove('placeholder');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcurrent.innerHTML = this.placeholder;\r\n\t\t\t\tcurrent.classList.add('placeholder');\r\n\t\t\t}\r\n\t\t\t// let html = this.selectedOptions.length > 0 ? this.selectedOptions[0].data.text : this.placeholder;\r\n\r\n\t\t\t// this.dropdown.querySelector(\".current\").innerHTML = html;\r\n\t\t}\r\n\t}\r\n\r\n\t_renderItems() {\r\n\t\tvar ul = this.menu.querySelector(\"ul\");\r\n\t\tthis.options.forEach(item => {\r\n\t\t\tul.appendChild(this._renderItem(item));\r\n\t\t});\r\n\t}\r\n\r\n\t_renderItem(option) {\r\n\t\tvar el = document.createElement(\"li\");\r\n\r\n\t\tel.innerHTML = option.data.display;\r\n\r\n\t\tif (option.attributes.optgroup) {\r\n\t\t\taddClass(el, 'optgroup');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tel.setAttribute(\"data-value\", option.data.value);\r\n\t\t\tel.addEventListener(\"click\", this._onItemClicked.bind(this, option));\r\n\t\t\tel.classList.add(\"option\");\r\n\t\t\tif (option.attributes.selected) {\r\n\t\t\t\tel.classList.add(\"selected\");\r\n\t\t\t}\r\n\t\t\tif (option.attributes.disabled) {\r\n\t\t\t\tel.classList.add(\"disabled\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toption.element = el;\r\n\t\treturn el;\r\n\t}\r\n\r\n\tpositionMenu(target, element) {\r\n\t\tcomputePosition(target, element, {\r\n\t\t\tplacement: this.placement,\r\n\t\t\tmiddleware: [\r\n\t\t\t\toffset(this.offset),\r\n\t\t\t\tflip({ fallbackStrategy: 'bestFit', padding: this.offset }),\r\n\t\t\t\tthis.availableHeight == true && size({\r\n\t\t\t\t\tapply({ availableHeight }) {\r\n\t\t\t\t\t\tObject.assign(element.style, {\r\n\t\t\t\t\t\t\tmaxHeight: `${Math.max(100, availableHeight)}px`,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpadding: this.offset\r\n\t\t\t\t}),\r\n\t\t\t\tthis.sameWidth == true && size({\r\n\t\t\t\t\tapply({ rects }) {\r\n\t\t\t\t\t\tObject.assign(element.style, {\r\n\t\t\t\t\t\t\twidth: `${rects.reference.width}px`\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpadding: this.offset\r\n\t\t\t\t}),\r\n\t\t\t]\r\n\t\t}).then(({ x, y, placement }) => {\r\n\t\t\tObject.assign(element.style, {\r\n\t\t\t\ttop: `${y}px`,\r\n\t\t\t\tleft: `${x}px`\r\n\t\t\t});\r\n\r\n\t\t\tthis.finalPosition = placement;\r\n\t\t});\r\n\t}\r\n\r\n\thideMenu(e) {\r\n\t\tif (/^top/.test(this.finalPosition)) {\r\n\t\t\tlet bottom = getComputedStyle(this.menu).bottom;\r\n\t\t\tthis.menu.style.bottom = bottom;\r\n\t\t\tthis.menu.style.top = \"\";\r\n\t\t}\r\n\t\tif (/^bottom/.test(this.finalPosition)) {\r\n\t\t\tlet top = getComputedStyle(this.menu).top;\r\n\t\t\tthis.menu.style.top = top;\r\n\t\t\tthis.menu.style.bottom = \"\";\r\n\t\t}\r\n\t\tif (this.cleanup) this.cleanup();\r\n\t\tremoveClass(this.dropdown, \"open\");\r\n\t\tremoveClass(this.menu, \"opening\");\r\n\t\tremoveClass(this.menu, \"open\");\r\n\t\ttriggerModalClose(this.el);\r\n\t\tthis.menu.style.maxHeight = \"0\";\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.menu.remove();\r\n\t\t\tthis.menu.style.top = \"\";\r\n\t\t\tthis.menu.style.bottom = \"\";\r\n\t\t\tthis.menu.style.maxHeight = \"\";\r\n\t\t}, parseFloat(getComputedStyle(this.menu).transitionDuration) * 1000);\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.extractData();\r\n\t\tif (this.dropdown) {\r\n\t\t\tvar open = hasClass(this.dropdown, \"open\");\r\n\t\t\tthis.dropdown.remove();\r\n\t\t\tthis.create();\r\n\r\n\t\t\tif (open) {\r\n\t\t\t\ttriggerClick(this.dropdown);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (attr(this.el, \"disabled\")) {\r\n\t\t\tthis.disable();\r\n\t\t} else {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\t}\r\n\r\n\tdisable() {\r\n\t\tif (!this.disabled) {\r\n\t\t\tthis.disabled = true;\r\n\t\t\taddClass(this.dropdown, \"disabled\");\r\n\t\t}\r\n\t}\r\n\r\n\tenable() {\r\n\t\tif (this.disabled) {\r\n\t\t\tthis.disabled = false;\r\n\t\t\tremoveClass(this.dropdown, \"disabled\");\r\n\t\t}\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.resetSelectValue();\r\n\t\tthis.selectedOptions = [];\r\n\t\tthis._renderSelectedItems();\r\n\t\tthis.update();\r\n\r\n\t\ttriggerChange(this.el);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tif (this.dropdown) {\r\n\t\t\tthis.dropdown.remove();\r\n\t\t\tthis.el.style.display = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tbindEvent() {\r\n\t\tthis.dropdown.addEventListener(\"click\", this._onClicked.bind(this));\r\n\t\tthis.dropdown.addEventListener(\"keydown\", this._onKeyPressed.bind(this));\r\n\t\tthis.dropdown.addEventListener(\"focusin\", triggerFocusIn.bind(this, this.el));\r\n\t\tthis.dropdown.addEventListener(\"focusout\", triggerFocusOut.bind(this, this.el));\r\n\t\tthis.el.addEventListener(\"invalid\", triggerValidationMessage.bind(this, this.el, 'invalid'));\r\n\t\twindow.addEventListener(\"click\", this._onClickedOutside.bind(this));\r\n\r\n\t\tif (this.searchable) {\r\n\t\t\tthis._bindSearchEvent();\r\n\t\t}\r\n\t}\r\n\r\n\t_bindSearchEvent() {\r\n\t\tvar searchBox = this.menu.querySelector(\".nice-select-search\");\r\n\t\tif (searchBox) {\r\n\t\t\tsearchBox.addEventListener(\"click\", function (e) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsearchBox.addEventListener(\"input\", this._onSearchChanged.bind(this));\r\n\t\tsearchBox.addEventListener(\"keydown\", this._onKeyPressed.bind(this));\r\n\t}\r\n\r\n\t_onClicked(e) {\r\n\t\te.preventDefault();\r\n\t\tvar search = this.menu.querySelector(\".nice-select-search\");\r\n\t\t// e.stopImmediatePropagation();\r\n\t\tif (!hasClass(this.dropdown, \"open\")) {\r\n\t\t\taddClass(this.dropdown, \"open\");\r\n\t\t\ttriggerModalOpen(this.el);\r\n\t\t\tdocument.body.appendChild(this.menu);\r\n\t\t\tif (search) search.value = \"\";\r\n\t\t\t\r\n\t\t\tvar t = this.menu.querySelector(\".focus\");\r\n\t\t\tremoveClass(t, \"focus\");\r\n\t\t\tt = this.menu.querySelector(\".selected\");\r\n\t\t\taddClass(t, \"focus\");\r\n\t\t\tthis.menu.querySelectorAll(\"ul li\").forEach(function (item) {\r\n\t\t\t\titem.style.display = \"\";\r\n\t\t\t});\r\n\t\t\tthis.cleanup = autoUpdate(this.dropdown, this.menu, () => {\r\n\t\t\t\tthis.positionMenu(this.dropdown, this.menu);\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t\tscrollIntoView(this.menu.querySelector(\".selected\"), {\r\n\t\t\t\ttime: 0, validTarget: function (target, parentsScrolled) {\r\n\t\t\t\t\treturn parentsScrolled < 2 && target !== window && target.matches('.list');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\taddClass(this.menu, \"opening\");\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\taddClass(this.menu, \"open\");\r\n\t\t\t\tif (search) search.focus();\r\n\t\t\t}, parseFloat(getComputedStyle(this.menu).transitionDuration) * 1000);\r\n\t\t} else {\r\n\t\t\tthis.hideMenu(e);\r\n\t\t\tthis.dropdown.focus();\r\n\t\t}\r\n\t}\r\n\t_onItemClicked(option, e) {\r\n\t\tvar optionEl = e.target;\r\n\r\n\t\tif (!hasClass(optionEl, \"disabled\")) {\r\n\t\t\tif (this.multiple) {\r\n\t\t\t\tif (hasClass(optionEl, \"selected\")) {\r\n\t\t\t\t\tremoveClass(optionEl, \"selected\");\r\n\t\t\t\t\tthis.selectedOptions.splice(this.selectedOptions.indexOf(option), 1);\r\n\t\t\t\t\tthis.el.querySelector(`option[value=\"${optionEl.dataset.value}\"]`).removeAttribute('selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddClass(optionEl, \"selected\");\r\n\t\t\t\t\tthis.selectedOptions.push(option);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.options.forEach(function (item) {\r\n\t\t\t\t\tremoveClass(item.element, \"selected\");\r\n\t\t\t\t});\r\n\t\t\t\tthis.selectedOptions.forEach(function (item) {\r\n\t\t\t\t\tremoveClass(item.element, \"selected\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\taddClass(optionEl, \"selected\");\r\n\t\t\t\tthis.selectedOptions = [option];\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderSelectedItems();\r\n\t\t\tthis.updateSelectValue();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateSelectValue() {\r\n\t\tif (this.multiple) {\r\n\t\t\tvar select = this.el;\r\n\t\t\tthis.selectedOptions.forEach(function (item) {\r\n\t\t\t\tvar el = select.querySelector(`option[value=\"${item.data.value}\"]`);\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\tel.setAttribute(\"selected\", true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (this.selectedOptions.length > 0) {\r\n\t\t\tthis.el.value = this.selectedOptions[0].data.value;\r\n\t\t}\r\n\t\ttriggerChange(this.el);\r\n\t}\r\n\r\n\tresetSelectValue() {\r\n\t\tif (this.multiple) {\r\n\t\t\tvar select = this.el;\r\n\t\t\tthis.selectedOptions.forEach(function (item) {\r\n\t\t\t\tvar el = select.querySelector(`option[value=\"${item.data.value}\"]`);\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\tel.removeAttribute(\"selected\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (this.selectedOptions.length > 0) {\r\n\t\t\tthis.el.selectedIndex = -1;\r\n\t\t}\r\n\r\n\t\ttriggerChange(this.el);\r\n\t}\r\n\r\n\t_onClickedOutside(e) {\r\n\t\tif (!this.dropdown.contains(e.target)) {\r\n\t\t\tthis.hideMenu(e);\r\n\t\t}\r\n\t}\r\n\r\n\t_onKeyPressed(e) {\r\n\t\t// Keyboard events\r\n\t\tlet focusedOption = this.menu.querySelector(\".focus\");\r\n\t\tlet isOpen = hasClass(this.dropdown, \"open\");\r\n\r\n\t\tif (!isOpen) {\r\n\t\t\t// On \"Arrow down\", \"Arrow up\", \"Space\" and \"Enter\" keys opens the panel\r\n\t\t\tif (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 32|| e.keyCode === 13) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\ttriggerClick(this.dropdown);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tswitch (e.keyCode) {\r\n\t\t\t\tcase 13:\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\t// On \"Enter\" or \"Space\" selects the focused element as the selected one\r\n\t\t\t\t\ttriggerClick(focusedOption);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 27:\r\n\t\t\t\t\t// On \"Escape\" closes the panel\r\n\t\t\t\t\ttriggerClick(this.dropdown);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 38:\r\n\t\t\t\t\t// On \"Arrow up\" set focus to the prev option if present\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis._focusPrev(focusedOption);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 40:\r\n\t\t\t\t\t// On \"Arrow down\" set focus to the next option if present\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis._focusNext(focusedOption);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_findNext(el) {\r\n\t\tif (el) {\r\n\t\t\tel = el.nextElementSibling;\r\n\t\t} else {\r\n\t\t\tel = this.menu.querySelector(\".list .option\");\r\n\t\t}\r\n\r\n\t\twhile (el) {\r\n\t\t\tif (!hasClass(el, \"disabled\") && el.style.display !== \"none\") {\r\n\t\t\t\treturn el;\r\n\t\t\t}\r\n\t\t\tel = el.nextElementSibling;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t_findPrev(el) {\r\n\t\tif (el) {\r\n\t\t\tel = el.previousElementSibling;\r\n\t\t} else {\r\n\t\t\tel = this.menu.querySelector(\".list .option:last-child\");\r\n\t\t}\r\n\r\n\t\twhile (el) {\r\n\t\t\tif (!hasClass(el, \"disabled\") && el.style.display !== \"none\") {\r\n\t\t\t\treturn el;\r\n\t\t\t}\r\n\t\t\tel = el.previousElementSibling;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t_focusNext(focusedOption) {\r\n\t\tvar next = this._findNext(focusedOption);\r\n\t\tif (next) {\r\n\t\t\tvar t = this.menu.querySelector(\".focus\");\r\n\t\t\tremoveClass(t, \"focus\");\r\n\t\t\taddClass(next, \"focus\");\r\n\t\t\tscrollIntoView(next, {\r\n\t\t\t\ttime: 250, validTarget: function (target, parentsScrolled) {\r\n\t\t\t\t\treturn parentsScrolled < 2 && target !== window && target.matches('.list');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_focusPrev(focusedOption) {\r\n\t\tvar prev = this._findPrev(focusedOption);\r\n\t\tif (prev) {\r\n\t\t\tvar t = this.menu.querySelector(\".focus\");\r\n\t\t\tremoveClass(t, \"focus\");\r\n\t\t\taddClass(prev, \"focus\");\r\n\t\t\tscrollIntoView(prev, {\r\n\t\t\t\ttime: 250, validTarget: function (target, parentsScrolled) {\r\n\t\t\t\t\treturn parentsScrolled < 2 && target !== window && target.matches('.list');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_onSearchChanged(e) {\r\n\t\tvar open = hasClass(this.dropdown, \"open\");\r\n\t\tvar text = e.target.value;\r\n\t\ttext = text.toLowerCase();\r\n\r\n\t\tif (text === \"\") {\r\n\t\t\tthis.options.forEach(function (item) {\r\n\t\t\t\titem.element.style.display = \"\";\r\n\t\t\t});\r\n\t\t} else if (open) {\r\n\t\t\tvar matchReg = new RegExp(text);\r\n\t\t\tthis.options.forEach(function (item) {\r\n\t\t\t\tvar optionText = item.data.text.toLowerCase();\r\n\t\t\t\tvar matched = matchReg.test(optionText);\r\n\t\t\t\titem.element.style.display = matched ? \"\" : \"none\";\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.menu.querySelectorAll(\".focus\").forEach(function (item) {\r\n\t\t\tremoveClass(item, \"focus\");\r\n\t\t});\r\n\r\n\t\tvar firstEl = this._findNext(null);\r\n\t\taddClass(firstEl, \"focus\");\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function bind(el, options) {\r\n\treturn new NiceSelect(el, options);\r\n}\r\n"],"names":[],"sourceRoot":""}